{"version":3,"sources":["entities/Rectangle.ts","entities/Region.ts","entities/Category.ts","entities/Label.ts","api/crdbApi.ts","components/RegionEditor/RegionEditorController.ts","components/RegionEditor/index.tsx","utils/manipulateImage.ts","components/CategorySetting.tsx","components/RegionList.tsx","components/RegionEditorContainer.tsx","components/ImageList.tsx","App.tsx","serviceWorker.ts","index.tsx","add_photo_alternate-black-48dp.svg"],"names":["Rectangle","_left","_top","_right","_bottom","width","right","left","height","bottom","top","l","Math","min","this","t","r","max","b","rectangle","value","Region","id","categoryId","label","x","y","abs","deepCopy","convertRegionsToPathRegions","regions","map","region","index","toPoints","convertPointsToRegions","regionObj","horizontalPointList","point","verticalPointList","points","verticalPoints","validate","Category","name","order","_id","_name","_order","Label","_categoryId","_label","BASE_API_ENDPOINT","handleErrors","response","ok","status","Error","fetchHash","imageFile","a","formData","FormData","append","fetch","method","body","then","json","fetchCategories","jsonObj","categories","categoryObj","fetchLabels","labels","labelObj","fetchPageRegionsUrl","imageIds","category","url","fetchPageRegions","console","log","hashes","submitPageRegionsUrl","submitPageRegions","idempotencyKey","regionsObj","JSON","stringify","headers","RegionEditorController","canvas","callback","mode","regionList","image","selectedRegion","addedRegion","deletedRegion","deformedRegion","_focusedRegion","_editingRegion","_selectedRegion","imageWidth","imageHeight","marginTop","marginBottom","marginLeft","marginRight","clicking","onMouseDownListener","event","calcXRatio","offsetX","calcYRatio","offsetY","nearestRegionArray","nearestRegion","length","editingRegion","createRegion","onSelectedRegion","redraw","onMouseMoveListener","focusedRegion","onMouseUpListener","addRegion","onKeyDownListener","key","preventDefault","dist","shiftKey","altKey","shrink","metaKey","expand","move","deleteRegion","isNaN","parseInt","selectPrevRegion","selectNextRegion","changeRegionLabel","onKeyUpListener","minMarginPixel","ratio","marginHorizontal","marginVertical","filter","containsPoint","neighborScore","sort","scoreA","scoreB","list","onAddedRegion","deleteIndex","indexOf","slice","onDeletedRegion","count","toIndex","moveRegion","editingRectangle","endsWith","deform","deformRegionIndex","deformRegion","rect","newLeft","newTop","newRight","newBottom","newRegionList","onDeformRegion","labelRegionIndex","labelRegion","onChangedLabel","ctx","getContext","clearRect","drawImage","forEach","strokeStyle","drawMarkers","drawRegion","topX","centerX","topY","fillRect","leftX","leftY","centerY","rightX","rightY","bottomX","bottomY","fillStyle","drawExpandMarkers","drawShrinkMarkers","strokeRect","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","paper","canvasContainer","position","cursor","RegionEditor","props","classes","useState","cacheImage","setImage","regionEditorControllerRef","useRef","useEffect","resizeEvent","current","clientWidth","clientHeight","calcMargin","window","addEventListener","removeEventListener","canvasRef","regionEditorController","document","file","onResizeCompleted","fileReader","FileReader","onload","result","target","img","Image","src","readAsDataURL","manipulateImage","selectedCategory","className","ref","tabIndex","overflowY","formControl","margin","spacing","minWidth","selectEmpty","CategorySetting","categorySelect","getLabels","apis","onLabelsUpdated","getCategories","onCategoriesUpdated","onCategorySelected","FormControl","InputLabel","Select","onChange","categoryList","MenuItem","table","RegionList","Box","moveOrder","fromIndex","resultRegionList","temp","moveOrderDown","newIndex","onChangeRegionList","moveOrderUp","categorySettingCallback","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","onClick","onRegionSelected","selectRegion","selectedOrNot","labelValue","labelList","labelName","IconButton","orderIcons","EditHistory","display","grid","regionEditor","title","flexGrow","menu","useStateRef","initialValue","setValue","RegionEditorContainer","uuidv4","editingFile","setEditingFile","editingCategory","setEditingCategory","isDirty","setDirty","showSaveConfirmDialog","setShowSaveDialog","anchorImportExportMenu","setAnchorImportExportMenu","importInput","setHashes","setCategoryList","setSelectedCategory","setLabelList","selectedRegionState","setSelectedRegion","selectedRegionRef","Array","regionListState","setRegionList","regionListRef","historyListState","setHistoryList","historyListRef","snackbarText","setSnackbarText","open","vertical","horizontal","state","setState","regionEditorCallback","addEditHistory","changedRegion","regionListCallback","newCategoryList","handleError","error","message","getRegions","selectedFile","onlineMode","h","ctrlKey","restoreEditHistory","clearEditHistory","dirty","lastHistoryIndex","latestHistory","newHistoryList","submitRegions","saveRegions","blob","Blob","type","URL","createObjectURL","createElement","appendChild","download","href","click","remove","revokeObjectURL","AppBar","Toolbar","Typography","variant","Tooltip","color","onTurnOnlineRequested","handleClose","handleExport","Menu","anchorEl","keepMounted","Boolean","onClose","disabled","currentTarget","accept","files","e","parse","readAsText","hidden","showImportExportMenu","Snackbar","autoHideDuration","anchorOrigin","Grid","container","item","xs","Container","handleSave","handleDiscard","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","showSaveDialog","flexWrap","justifyContent","overflow","gridList","transform","imageBoxContainerSelected","border","imageBoxContainer","imageContainer","alignItems","objectFit","imagePlaceholder","boxFile","tapContainer","selectionBox","clearIcon","ImageList","imageFiles","setImageFiles","previewImages","setPreviewImages","fileInput","readFile","GridList","fileInputSnapshot","add_photo_alternate_black","isSelected","onDelete","createPreviewImage","onFileSelected","splice","onFileListUpdated","createPreviewImages","multiple","unshift","main","drawerHeader","padding","mixins","toolbar","grow","textAlign","drawerHeaderShift","transition","transitions","create","easing","easeOut","duration","enteringScreen","drawer","drawerPaper","drawerHeaderPaper","paddingLeft","content","sharp","leavingScreen","contentShift","App","setOnlineMode","imageListShown","setImageListShown","fileList","setFileList","setFile","agreementDate","localStorage","getItem","agreementDialogShown","showAgreementDialog","rootElement","prevFile","currentIndex","nextFile","regionEditorContainerCallback","toggleDrawer","getHashList","f","exportRegions","hashList","onKeyDown","CssBaseline","rel","Drawer","anchor","clsx","elevation","setItem","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"mlBAAaA,EAAb,4DAEYC,MAAQ,EAFpB,KAUYC,KAAO,EAVnB,KAkBYC,OAAS,EAlBrB,KA0BYC,QAAU,EA1BtB,KAyCIC,MAAQ,WAAQ,OAAO,EAAKC,MAAQ,EAAKC,MAzC7C,KA0CIC,OAAS,WAAQ,OAAO,EAAKC,OAAS,EAAKC,KA1C/C,uDA6CQ,IAAMC,EAAIC,KAAKC,IAAIC,KAAKP,KAAMO,KAAKR,OAC7BS,EAAIH,KAAKC,IAAIC,KAAKJ,IAAKI,KAAKL,QAC5BO,EAAIJ,KAAKK,IAAIH,KAAKP,KAAMO,KAAKR,OAC7BY,EAAIN,KAAKK,IAAIH,KAAKJ,IAAKI,KAAKL,QAElCK,KAAKP,KAAOI,EACZG,KAAKJ,IAAMK,EACXD,KAAKR,MAAQU,EACbF,KAAKL,OAASS,IArDtB,iCAyDQ,MAAM,SAAN,OAAgBJ,KAAKP,KAArB,kBAAmCO,KAAKJ,IAAxC,oBAAuDI,KAAKR,MAA5D,qBAA8EQ,KAAKL,UAzD3F,iCA6DQ,MAAO,CACH,CACI,EAAKK,KAAKP,KACV,EAAKO,KAAKJ,KAEd,CACI,EAAKI,KAAKR,MACV,EAAKQ,KAAKJ,KAEd,CACI,EAAKI,KAAKR,MACV,EAAKQ,KAAKL,QAEd,CACI,EAAKK,KAAKP,KACV,EAAKO,KAAKL,WA5E1B,iCAkFQ,IAAMU,EAAY,IAAInB,EAMtB,OALAmB,EAAUZ,KAAOO,KAAKP,KACtBY,EAAUT,IAAMI,KAAKJ,IACrBS,EAAUb,MAAQQ,KAAKR,MACvBa,EAAUV,OAASK,KAAKL,OAEjBU,IAxFf,yBAGaC,GACLN,KAAKb,MAAQW,KAAKC,IAAID,KAAKK,IAAI,EAAGG,GAAQ,IAJlD,eAOQ,OAAOR,KAAKC,IAAIC,KAAKb,MAAOa,KAAKX,UAPzC,wBAWYiB,GACJN,KAAKZ,KAAOU,KAAKC,IAAID,KAAKK,IAAI,EAAGG,GAAQ,IAZjD,eAeQ,OAAOR,KAAKC,IAAIC,KAAKZ,KAAMY,KAAKV,WAfxC,0BAmBcgB,GACNN,KAAKX,OAASS,KAAKC,IAAID,KAAKK,IAAI,EAAGG,GAAQ,IApBnD,eAuBQ,OAAOR,KAAKK,IAAIH,KAAKb,MAAOa,KAAKX,UAvBzC,2BA2BeiB,GACPN,KAAKV,QAAUQ,KAAKC,IAAID,KAAKK,IAAI,EAAGG,GAAQ,IA5BpD,eA+BQ,OAAOR,KAAKK,IAAIH,KAAKZ,KAAMY,KAAKV,WA/BxC,8BAmCQ,OAAOU,KAAKP,KAAOO,KAAKT,QAAU,IAnC1C,8BAsCQ,OAAOS,KAAKJ,IAAMI,KAAKN,SAAW,MAtC1C,KCEaa,EAAb,WAOI,WAAYC,EAAYC,EAAoBC,EAAeL,GAAuB,yBALlFG,QAKiF,OAJjFC,gBAIiF,OAHjFC,WAGiF,OAFjFL,eAEiF,EAC7EL,KAAKQ,GAAKA,EACVR,KAAKS,WAAaA,EAClBT,KAAKU,MAAQA,EACbV,KAAKK,UAAYA,EAXzB,0DAckBM,EAAWC,GACrB,QAAID,EAAIX,KAAKK,UAAUZ,UAGnBmB,EAAIZ,KAAKK,UAAUT,SAGnBe,EAAIX,KAAKK,UAAUb,UAGnBoB,EAAIZ,KAAKK,UAAUV,YAxB/B,oCA8BkBgB,EAAWC,GACrB,IAAMf,EAAIC,KAAKe,IAAIb,KAAKK,UAAUZ,KAAOkB,GACnCT,EAAIJ,KAAKe,IAAIb,KAAKK,UAAUb,MAAQmB,GACpCV,EAAIH,KAAKe,IAAIb,KAAKK,UAAUT,IAAMgB,GAClCR,EAAIN,KAAKe,IAAIb,KAAKK,UAAUV,OAASiB,GAE3C,OAAOd,KAAKC,IAAIF,EAAGI,EAAGC,EAAGE,KApCjC,iCAwCQ,OAAO,IAAIG,EAAOP,KAAKQ,GAAIR,KAAKS,WAAYT,KAAKU,MAAOV,KAAKK,UAAUS,gBAxC/E,KA8CO,SAASC,EAA4BC,GACxC,OAAOA,EAAQC,KAAI,SAACC,EAAgBC,GAChC,MAAO,CACH,YAAeD,EAAOT,WACtB,MAASS,EAAOR,MAChB,MAPO,EAOES,EACT,OAAUD,EAAOb,UAAUe,eAiBhC,SAASC,EAAuBL,GACnC,OAAOA,EAAQC,KAAI,SAACK,GAChB,IAAMd,EAAKc,EAAS,GAASA,EAAS,IAAU,EAC1Cb,EAAaa,EAAS,YACtBZ,EAAQY,EAAS,MAEjBC,EAAuCD,EAAS,OAjB5CL,KAAI,SAACO,GACf,OAAOA,EAAK,KAiBNC,EAbd,SAAwBC,GACpB,OAAOA,EAAOT,KAAI,SAACO,GACf,OAAOA,EAAK,KAWcG,CAAeL,EAAS,QAE5C7B,EAAOK,KAAKC,IAAL,MAAAD,KAAI,YAAQyB,IACnB3B,EAAME,KAAKC,IAAL,MAAAD,KAAI,YAAQ2B,IAClBjC,EAAQM,KAAKK,IAAL,MAAAL,KAAI,YAAQyB,IACpB5B,EAASG,KAAKK,IAAL,MAAAL,KAAI,YAAQ2B,IAErBpB,EAAY,IAAInB,EAOtB,OANAmB,EAAUZ,KAAOA,EACjBY,EAAUT,IAAMA,EAChBS,EAAUb,MAAQA,EAClBa,EAAUV,OAASA,EACnBU,EAAUuB,WAEH,IAAIrB,EAAOC,EAAIC,EAAYC,EAAOL,MC5F1C,IAAMwB,GAAb,WAiBI,WAAYrB,EAAYsB,EAAcC,GAAgB,yBAf9CC,IAAM,EAeuC,KAV7CC,MAAQ,GAUqC,KAL7CC,OAAS,EAMblC,KAAKgC,IAAMxB,EACXR,KAAKiC,MAAQH,EACb9B,KAAKkC,OAASH,EApBtB,+CAIQ,OAAO/B,KAAKgC,MAJpB,2BASQ,OAAOhC,KAAKiC,QATpB,4BAcQ,OAAOjC,KAAKkC,WAdpB,KCAaC,GAAb,WAsBI,WAAY1B,EAAoBC,EAAeoB,EAAcC,GAAgB,yBApBrEK,YAAc,EAoBsD,KAfpEC,OAAS,EAe2D,KAVpEJ,MAAQ,GAU4D,KALpEC,OAAS,EAMblC,KAAKoC,YAAc3B,EACnBT,KAAKqC,OAAS3B,EACdV,KAAKiC,MAAQH,EACb9B,KAAKkC,OAASH,EA1BtB,uDAIQ,OAAO/B,KAAKoC,cAJpB,4BASQ,OAAOpC,KAAKqC,SATpB,2BAcQ,OAAOrC,KAAKiC,QAdpB,4BAmBQ,OAAOjC,KAAKkC,WAnBpB,KCIMI,GAAoB,gCAEpBC,GAAe,SAACC,GACpB,GAAIA,EAASC,GACX,OAAOD,EAGT,OAAQA,EAASE,QACf,KAAK,IAAK,MAAMC,MAAM,iBACtB,KAAK,IAAK,MAAMA,MAAM,gBACtB,KAAK,IAAK,MAAMA,MAAM,yBACtB,KAAK,IAAK,MAAMA,MAAM,eACtB,KAAK,IAAK,MAAMA,MAAM,yBACtB,QAAS,MAAMA,MAAM,qBAIlB,SAAeC,GAAtB,mC,8CAAO,WAAyBC,GAAzB,iBAAAC,EAAA,6DACCC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,GAFnB,SAGkBK,MAAMZ,GAAoB,QAAS,CAAEa,OAAQ,OAAQC,KAAML,IAC/EM,KAAKd,IAJH,cAGCC,EAHD,yBAKEA,EAASc,QALX,4C,sBAQA,SAAeC,KAAtB,gC,8CAAO,gCAAAT,EAAA,sEACkBI,MAAMZ,GAAoB,aAC9Ce,KAAKd,IAFH,cACCC,EADD,gBAGiBA,EAASc,OAH1B,cAGCE,EAHD,OAICC,EAAaD,EAAO,WAAevC,KAAI,SAACyC,GAC5C,IAAMlD,EAAKkD,EAAW,GAChB5B,EAAO4B,EAAW,KAClB3B,EAAQ2B,EAAW,MACzB,OAAO,IAAI7B,GAASrB,EAAIsB,EAAMC,MAR3B,kBAWE0B,GAXF,4C,sBAcA,SAAeE,GAAtB,mC,8CAAO,WAA2BlD,GAA3B,mBAAAqC,EAAA,sEACkBI,MAAMZ,GAAiB,oBAAgB7B,IAC3D4C,KAAKd,IAFH,cACCC,EADD,gBAGiBA,EAASc,OAH1B,cAGCE,EAHD,OAICI,EAASJ,EAAO,OAAWvC,KAAI,SAAC4C,GACpC,IAAMpD,EAAaoD,EAAQ,YACrBnD,EAAQmD,EAAQ,MAChB/B,EAAO+B,EAAQ,KACf9B,EAAQ8B,EAAQ,MACtB,OAAO,IAAI1B,GAAM1B,EAAYC,EAAOoB,EAAMC,MATvC,kBAYE6B,GAZF,4C,sBAeA,SAASE,GAAoBC,EAAcC,GAChD,IAAIC,EAAM3B,GAAoB,SAAWyB,EAAQ,OAIjD,OAHIC,IACFC,GAAG,wBAAqBD,EAASxD,KAE5ByD,EAGF,SAAeC,GAAtB,qC,8CAAO,WAAgCH,EAAcC,GAA9C,mBAAAlB,EAAA,sEACkBI,MAAMY,GAAoBC,EAAUC,IACxDX,KAAKd,IAFH,cACCC,EADD,gBAGiBA,EAASc,OAH1B,cAGCE,EAHD,OAKCxC,EAAUK,EAAuBmC,EAAO,SAC9CW,QAAQC,IAAIpD,GANP,kBAQE,CACLqD,OAAQN,EACR/C,QAASA,IAVN,4C,sBAcP,SAASsD,GAAqBN,GAC5B,IAAIC,EAAM3B,GAAoB,QAI9B,OAHI0B,IACFC,GAAO,gBAAkBD,EAASxD,IAE7ByD,EAGF,SAAeM,GAAtB,yC,8CAAO,WACLC,EACAH,EACArD,EACAgD,GAJK,qBAAAlB,EAAA,6DAOC2B,EAAa1D,EAA4BC,GACzCwC,EAAU,CACd,UAAa,CACX,OAAUa,EAAM,OAChB,QAAWA,EAAM,QACjB,QAAWA,EAAM,SAEnB,QAAWI,GAGPrB,EAAesB,KAAKC,UAAUnB,GAjB/B,SAmBkBN,MAAMoB,GAAqBN,GAAW,CAC3Db,OAAQ,OACRyB,QAAS,CACP,kBAAmBJ,GAErBpB,KAAMA,IAxBH,cAmBCZ,EAnBD,yBA0BEA,EAASc,QA1BX,4C,sBCpFP,IAgBauB,GAAb,WAiUE,WACEC,EACAC,GACC,IAAD,gCAlUFf,SAAwC,IAAInC,GAAS,EAAG,UAAW,GAkUjE,KAjUFnB,MAAQ,EAiUN,KA/TMsE,KAAa,OA+TnB,KA7TFC,WAA0C,GA6TxC,KA5TFC,MAAiC,KA4T/B,KA1TMJ,YA0TN,OAxTMC,SAAqB,6GACVI,MADU,oCAIbC,EAAqBH,MAJR,sCAOXI,EAAuBJ,MAPZ,qCAUZI,EAAuBJ,MAVX,qCAaZK,EAAwBL,QAbZ,EAAG,IAwT9B,KAtSMM,eAAgC,KAsStC,KA9RMC,eAAgC,KA8RtC,KAtRMC,gBAAiC,KAsRvC,KA9QMC,WAAa,EA8QnB,KA7QMC,YAAc,EA6QpB,KA3QMC,UAAY,EA2QlB,KA1QMC,aAAe,EA0QrB,KAzQMC,WAAa,EAyQnB,KAxQMC,YAAc,EAwQpB,KA3NMC,UAAW,EA2NjB,KAzNFC,oBAAsB,SAACC,GACrB,EAAKF,UAAW,EAEhB,IAAMrF,EAAI,EAAKwF,WAAWD,EAAME,SAC1BxF,EAAI,EAAKyF,WAAWH,EAAMI,SAE1BC,EAAqB,EAAKC,cAAc7F,EAAGC,GAC5C2F,IAIDA,EAAmBE,OAAS,EAC9B,EAAKtB,eAAiBoB,EAAmB,IAEzC,EAAKpB,eAAiB,KACtB,EAAKuB,cAAgB,EAAKC,aAAahG,EAAGC,IAE5C,EAAKmE,SAAS6B,iBAAiB,EAAKzB,gBACpC,EAAK0B,WAuML,KApMFC,oBAAsB,SAACZ,GAErB,IAAMvF,EAAI,EAAKwF,WAAWD,EAAME,SAC1BxF,EAAI,EAAKyF,WAAWH,EAAMI,SAEhC,GAAI,EAAKN,UAAmC,OAAvB,EAAKU,cAIxB,OAHA,EAAKA,cAAcrG,UAAUb,MAAQmB,EACrC,EAAK+F,cAAcrG,UAAUV,OAASiB,OACtC,EAAKiG,SAGA,IAAK,EAAKb,SAAU,CACzB,IAAMO,EAAqB,EAAKC,cAAc7F,EAAGC,GACjD,IAAK2F,EACH,OASF,OANIA,EAAmBE,OAAS,EAC9B,EAAKM,cAAgBR,EAAmB,GAExC,EAAKQ,cAAgB,UAEvB,EAAKF,WA8KP,KAzKFG,kBAAoB,SAACd,GACnB,EAAKF,UAAW,EAEhB,IAAM9E,EAAS,EAAKwF,cACpB,GAAIxF,EAAQ,CAIV,GAHAA,EAAOb,UAAUuB,WACjB,EAAK8E,cAAgB,KAEjBxF,EAAOb,UAAUd,QAnLd,KAmLgC2B,EAAOb,UAAUX,SAnLjD,IAoLL,OAGF,EAAKuH,UAAU/F,KA6JjB,KA/HFgG,kBAAoB,SAAChB,GAEnB,GAAkB,eAAdA,EAAMiB,KAAsC,cAAdjB,EAAMiB,KAAqC,YAAdjB,EAAMiB,KAAmC,cAAdjB,EAAMiB,IAAqB,CACnHjB,EAAMkB,iBAEN,IAAMC,EA1NC,KA0NcnB,EAAMoB,SAAW,GAAM,GAExCpB,EAAMqB,OACR,EAAKC,OAAOtB,EAAMiB,IAAKE,GACdnB,EAAMuB,QACf,EAAKC,OAAOxB,EAAMiB,IAAKE,GAEvB,EAAKM,KAAKzB,EAAMiB,IAAKE,QAGlB,GAAkB,WAAdnB,EAAMiB,KAAkC,UAAdjB,EAAMiB,KAAiC,cAAdjB,EAAMiB,KAAqC,MAAdjB,EAAMiB,IAAa,CAG5G,GAFAjB,EAAMkB,kBAED,EAAKjC,eACR,OAEF,EAAKyC,aAAa,EAAKzC,qBAElB,GAAK0C,MAAMC,SAAS5B,EAAMiB,MAQR,WAAdjB,EAAMiB,KACfjB,EAAMkB,iBAEN,EAAKV,cAAgB,MACE,UAAdR,EAAMiB,KACfjB,EAAMkB,iBAEFlB,EAAMoB,SACR,EAAKS,mBAEL,EAAKC,oBAEgB,SAAd9B,EAAMiB,KACfjB,EAAMkB,iBACN,EAAKpC,KAAO,UACW,QAAdkB,EAAMiB,KACfjB,EAAMkB,iBACN,EAAKpC,KAAO,UAEZb,QAAQC,IAAI8B,EAAMiB,SA3BoB,CAGtC,GAFAjB,EAAMkB,kBAED,EAAKjC,eACR,OAEF,EAAK8C,kBAAkB,EAAK9C,eAAgB2C,SAAS5B,EAAMiB,MAwB7D,EAAKN,UA0EL,KAvEFqB,gBAAkB,SAAChC,GACjBA,EAAMkB,kBAEY,SAAdlB,EAAMiB,KAAmBjB,EAAMqB,UAEV,QAAdrB,EAAMiB,KAAkBjB,EAAMuB,WADvC,EAAKzC,KAAO,QAKd,EAAK6B,UA+DL7G,KAAK8E,OAASA,EACd9E,KAAK+E,SAAWA,EAtUpB,sDA+DI/E,KAAKkF,MAAQ,OA/DjB,iCAmEIiD,GAEA,GAAKnI,KAAKkF,MAAV,CAIA,IAAMkD,EAAQtI,KAAKC,IACjBC,KAAK8E,OAAOvF,MAAQS,KAAKkF,MAAM3F,MAC/BS,KAAK8E,OAAOpF,OAASM,KAAKkF,MAAMxF,QAG9B2I,EAAmBrI,KAAK8E,OAAOvF,MAASS,KAAKkF,MAAM3F,MAAQ6I,EAC3DE,EAAiBtI,KAAK8E,OAAOpF,OAAUM,KAAKkF,MAAMxF,OAAS0I,EAE3DC,EAAoC,EAAjBF,IACrBE,EAAoC,EAAjBF,GAEjBG,EAAkC,EAAjBH,IACnBG,EAAkC,EAAjBH,GAGnBnI,KAAK4F,UAAY0C,EAAiB,EAClCtI,KAAK6F,aAAeyC,EAAiBtI,KAAK4F,UAC1C5F,KAAK8F,WAAauC,EAAmB,EACrCrI,KAAK+F,YAAcsC,EAAmBrI,KAAK8F,WAE3C9F,KAAK0F,WAAa1F,KAAK8E,OAAOvF,MAAQ8I,EACtCrI,KAAK2F,YAAc3F,KAAK8E,OAAOpF,OAAS4I,KA9F5C,iCAiGalC,GACT,OAAQA,EAAUpG,KAAK8F,YAAc9F,KAAK0F,aAlG9C,iCAqGaY,GACT,OAAQA,EAAUtG,KAAK4F,WAAa5F,KAAK2F,cAtG7C,oCA2KgBhF,EAAWC,GACvB,OAAKZ,KAAKiF,WAIajF,KAAKiF,WAAWsD,QAAO,SAACrH,GAC7C,OAAOA,EAAOsH,cAAc7H,EAAGC,MAC9B2H,QAAO,SAACrH,GAET,OADcA,EAAOuH,cAAc9H,EAAGC,GAlMjB,QAuMc8H,MAAK,SAAC5F,EAAG1C,GAC5C,IAAMuI,EAAS7F,EAAE2F,cAAc9H,EAAGC,GAC5BgI,EAASxI,EAAEqI,cAAc9H,EAAGC,GAClC,OAAI+H,EAASC,GACH,EACCD,EAASC,EACX,EAEF,KAnBA,OA7Kb,gCAyQY1H,GACR,IAAM2H,EAAO7I,KAAKiF,WAAajF,KAAKiF,WAAa,GAEjDjF,KAAKiF,WAAL,sBAAsB4D,GAAtB,CAA4B3H,IAC5BlB,KAAK+E,SAAS+D,cAAc5H,EAAQlB,KAAKiF,YAEzCjF,KAAKmF,eAAiBjE,EACtBlB,KAAK+E,SAAS6B,iBAAiB1F,KAhRnC,mCAmReA,GACX,GAAKlB,KAAKiF,WAAV,CAIA,IAAM8D,EAAc/I,KAAKiF,WAAW+D,QAAQ9H,GACxC6H,GAAe,IACjB/I,KAAKiF,WAAL,sBACKjF,KAAKiF,WAAWgE,MAAM,EAAGF,IAD9B,YAEK/I,KAAKiF,WAAWgE,MAAMF,EAAc,EAAG/I,KAAKiF,WAAWwB,WAG9DzG,KAAK+E,SAASmE,gBAAgBhI,EAAQlB,KAAKiF,YAE3CjF,KAAKmF,eAAiB,KACtBnF,KAAK+E,SAAS6B,iBAAiB,SAlSnC,iCAqSauC,GACT,GAAKnJ,KAAKiF,YAAyC,IAA3BjF,KAAKiF,WAAWwB,OAIxC,GAA4B,OAAxBzG,KAAKmF,eAAT,CAKA,IAAMhE,EAAQnB,KAAKiF,WAAW+D,QAAQhJ,KAAKmF,gBAC3C,GAAIhE,GAAS,EAAG,CACd,IAAMiI,EAAUjI,EAAQgI,EACpBC,GAAW,GAAKA,EAAUpJ,KAAKiF,WAAWwB,SAC5CzG,KAAKmF,eAAiBnF,KAAKiF,WAAWmE,GACtCpJ,KAAK+E,SAAS6B,iBAAiB5G,KAAKmF,uBATtCnF,KAAKmF,eAAiBnF,KAAKiF,WAAW,KA3S5C,yCA0TIjF,KAAKqJ,YAAY,KA1TrB,yCA8TIrJ,KAAKqJ,WAAW,KA9TpB,kCA+BoBnI,GAChBlB,KAAKuF,eAAiBrE,GAhC1B,eAmCI,OAAOlB,KAAKuF,iBAnChB,kCAuCoBrE,GAChBlB,KAAKwF,eAAiBtE,GAxC1B,eA2CI,OAAOlB,KAAKwF,iBA3ChB,mCA+CqBtE,GACjBlB,KAAKyF,gBAAkBvE,GAhD3B,eAmDI,OAAOlB,KAAKyF,oBAnDhB,kDAyUe9E,EAAWC,GACtB,IAAM0I,EAAmB,IAAIpK,EAC7BoK,EAAiB7J,KAAOkB,EACxB2I,EAAiB9J,MAAQmB,EACzB2I,EAAiB1J,IAAMgB,EACvB0I,EAAiB3J,OAASiB,EAC1B,IAAMH,EAAaT,KAAKgE,SAAWhE,KAAKgE,SAASxD,GAAK,EACtD,OAAO,IAAID,GAAQ,EAAGE,EAAYT,KAAKU,MAAO4I,KAhVlD,6BAmVSnC,EAAaE,GAGlB,OAFArH,KAAKgF,KAAO,SAERmC,EAAIoC,SAAS,QACRvJ,KAAKwJ,OAAO,EAAG,GAAInC,EAAM,GACvBF,EAAIoC,SAAS,MACfvJ,KAAKwJ,OAAO,EAAG,EAAG,GAAInC,GACpBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAOnC,EAAM,EAAG,EAAG,KACtBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAO,EAAGnC,EAAM,EAAG,KA7VrC,6BAkWSF,EAAaE,GAGlB,OAFArH,KAAKgF,KAAO,SAERmC,EAAIoC,SAAS,QACRvJ,KAAKwJ,QAAQnC,EAAM,EAAG,EAAG,GACvBF,EAAIoC,SAAS,MACfvJ,KAAKwJ,OAAO,GAAInC,EAAM,EAAG,GACvBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAO,EAAG,EAAGnC,EAAM,KACtBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAO,EAAG,EAAG,EAAGnC,KA5WlC,2BAkXOF,EAAaE,GAGhB,OAFArH,KAAKgF,KAAO,OAERmC,EAAIoC,SAAS,QACRvJ,KAAKwJ,QAAQnC,EAAM,GAAIA,EAAM,GAC3BF,EAAIoC,SAAS,MACfvJ,KAAKwJ,OAAO,GAAInC,EAAM,GAAIA,GACxBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAOnC,EAAM,EAAGA,EAAM,KACzBF,EAAIoC,SAAS,SACfvJ,KAAKwJ,OAAO,EAAGnC,EAAM,EAAGA,KA5XrC,6BAkYS5H,EAAcG,EAAaJ,EAAeG,GAC/C,IAAKK,KAAKiF,aAAejF,KAAKmF,eAC5B,OAAO,EAGT,IAAMsE,EAAoBzJ,KAAKiF,WAAW+D,QAAQhJ,KAAKmF,gBACvD,GAAIsE,EAAoB,EACtB,OAAO,EAGT,IAAMC,EAAe1J,KAAKmF,eAAerE,WACnC6I,EAAOD,EAAarJ,UAEtBuJ,EAAUD,EAAKlK,KAAOA,EACtBoK,EAASF,EAAK/J,IAAMA,EACpBkK,EAAWH,EAAKnK,MAAQA,EACxBuK,EAAYJ,EAAKhK,OAASA,EAO9B,GALAiK,EAAU9J,KAAKK,IAAI,EAAGyJ,GACtBC,EAAS/J,KAAKK,IAAI,EAAG0J,GACrBC,EAAWhK,KAAKC,IAAI,EAAK+J,GACzBC,EAAYjK,KAAKC,IAAI,EAAKgK,GAEtBJ,EAAKlK,OAASmK,GACbD,EAAK/J,MAAQiK,GACbF,EAAKnK,QAAUsK,GACfH,EAAKhK,SAAWoK,EACnB,OAAO,EAGTJ,EAAKlK,KAAOmK,EACZD,EAAK/J,IAAMiK,EACXF,EAAKnK,MAAQsK,EACbH,EAAKhK,OAASoK,EAEd,IAAMC,EAAa,sBACdhK,KAAKiF,WAAWgE,MAAM,EAAGQ,IADX,CAEjBC,GAFiB,YAGd1J,KAAKiF,WAAWgE,MAAMQ,EAAoB,EAAGzJ,KAAKiF,WAAWwB,UAQlE,OANAzG,KAAKiF,WAAa+E,EAClBhK,KAAKmF,eAAiBuE,EAEtB1J,KAAK+E,SAASkF,eAAeP,EAAc1J,KAAKiF,YAChDjF,KAAK+E,SAAS6B,iBAAiB5G,KAAKmF,iBAE7B,IAhbX,wCAmboBjE,EAAgBR,GAGhC,GAFAV,KAAKU,MAAQA,GAERV,KAAKiF,WACR,OAAO,EAGT,IAAMiF,EAAmBlK,KAAKiF,WAAW+D,QAAQ9H,GACjD,GAAIgJ,EAAmB,EACrB,OAAO,EAGT,IAAMC,EAAcjJ,EAAOJ,WAC3BqJ,EAAYzJ,MAAQA,EAEpB,IAAMsJ,EAAa,sBACdhK,KAAKiF,WAAWgE,MAAM,EAAGiB,IADX,CAEjBC,GAFiB,YAGdnK,KAAKiF,WAAWgE,MAAMiB,EAAmB,EAAGlK,KAAKiF,WAAWwB,UAQjE,OANAzG,KAAKiF,WAAa+E,EAClBhK,KAAKmF,eAAiBgF,EAEtBnK,KAAK+E,SAASqF,eAAeD,EAAanK,KAAKiF,YAC/CjF,KAAK+E,SAAS6B,iBAAiB5G,KAAKmF,iBAE7B,IA7cX,+BAgdY,IAAD,OACDkF,EAAMrK,KAAK8E,OAAOwF,WAAW,MACvB,OAARD,IAIJA,EAAIE,UAAU,EAAG,EAAGvK,KAAK8E,OAAOvF,MAAOS,KAAK8E,OAAOpF,QAE9CM,KAAKkF,QAIVmF,EAAIG,UACFxK,KAAKkF,MACLlF,KAAK8F,WAAY9F,KAAK4F,UACtB5F,KAAK0F,WAAY1F,KAAK2F,aAGnB3F,KAAKiF,aAIVjF,KAAKiF,WAAWwF,SAAQ,SAACvJ,EAAQC,GAC3BD,IAAW,EAAKiE,gBAClBkF,EAAIK,YAAc,UAClB,EAAKC,YAAYzJ,EAAQmJ,IAChBnJ,IAAW,EAAK6F,cACzBsD,EAAIK,YAAc,UAElBL,EAAIK,YAAc,UAGpB,EAAKE,WAAW1J,EAAQmJ,MAGtBrK,KAAK0G,gBACP2D,EAAIK,YAAc,UAClB1K,KAAK4K,WAAW5K,KAAK0G,cAAe2D,SArf1C,wCAyfoBnJ,EAAgBmJ,GAEhC,IAAMQ,EAAO3J,EAAOb,UAAUyK,QAAU9K,KAAK0F,WAAa1F,KAAK8F,WACzDiF,EAAO7J,EAAOb,UAAUT,IAAMI,KAAK2F,YAAc3F,KAAK4F,UAC5DyE,EAAIW,SAASH,EAAME,EAAM,GA1gBP,GA6gBlB,IAAME,EAAQ/J,EAAOb,UAAUZ,KAAOO,KAAK0F,WAAa1F,KAAK8F,WACvDoF,EAAQhK,EAAOb,UAAU8K,QAAUnL,KAAK2F,YAAc3F,KAAK4F,UACjEyE,EAAIW,SAASC,EAAOC,GA/gBF,EA+gByB,GAG3C,IAAME,EAASlK,EAAOb,UAAUb,MAAQQ,KAAK0F,WAAa1F,KAAK8F,WACzDuF,EAASnK,EAAOb,UAAU8K,QAAUnL,KAAK2F,YAAc3F,KAAK4F,UAClEyE,EAAIW,SAASI,EAAQC,EAphBH,EAohB0B,GAG5C,IAAMC,EAAUpK,EAAOb,UAAUyK,QAAU9K,KAAK0F,WAAa1F,KAAK8F,WAC5DyF,EAAUrK,EAAOb,UAAUV,OAASK,KAAK2F,YAAc3F,KAAK4F,UAClEyE,EAAIW,SAASM,EAASC,EAAS,EAzhBb,KAatB,wCA+gBoBrK,EAAgBmJ,GAEhC,IAAMQ,EAAO3J,EAAOb,UAAUyK,QAAU9K,KAAK0F,WAAa1F,KAAK8F,WACzDiF,EAAO7J,EAAOb,UAAUT,IAAMI,KAAK2F,YAAc3F,KAAK4F,UAC5DyE,EAAIW,SAASH,EAAME,EAAM,EAhiBP,GAmiBlB,IAAME,EAAQ/J,EAAOb,UAAUZ,KAAOO,KAAK0F,WAAa1F,KAAK8F,WACvDoF,EAAQhK,EAAOb,UAAU8K,QAAUnL,KAAK2F,YAAc3F,KAAK4F,UACjEyE,EAAIW,SAASC,EAAOC,EAriBF,EAqiBwB,GAG1C,IAAME,EAASlK,EAAOb,UAAUb,MAAQQ,KAAK0F,WAAa1F,KAAK8F,WACzDuF,EAASnK,EAAOb,UAAU8K,QAAUnL,KAAK2F,YAAc3F,KAAK4F,UAClEyE,EAAIW,SAASI,EAAQC,GA1iBH,EA0iB2B,GAG7C,IAAMC,EAAUpK,EAAOb,UAAUyK,QAAU9K,KAAK0F,WAAa1F,KAAK8F,WAC5DyF,EAAUrK,EAAOb,UAAUV,OAASK,KAAK2F,YAAc3F,KAAK4F,UAClEyE,EAAIW,SAASM,EAASC,EAAS,GA/iBb,KAatB,kCAqiBcrK,EAAgBmJ,GAG1B,OAFAA,EAAImB,UAAY,UAERxL,KAAKgF,MACX,IAAK,OACH,OAEF,IAAK,SAEH,YADAhF,KAAKyL,kBAAkBvK,EAAQmJ,GAGjC,IAAK,SAEH,YADArK,KAAK0L,kBAAkBxK,EAAQmJ,MAjjBvC,iCAujBanJ,EAAgBmJ,GACzB,IAAMV,EAAOzI,EAAOb,UAEpBgK,EAAIsB,WACFhC,EAAKlK,KAAOO,KAAK0F,WAAa1F,KAAK8F,WACnC6D,EAAK/J,IAAMI,KAAK2F,YAAc3F,KAAK4F,UACnC+D,EAAKpK,QAAUS,KAAK0F,WACpBiE,EAAKjK,SAAWM,KAAK2F,iBA9jB3B,KCXA,IAGMiG,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFtM,OAAO,OACPuM,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE9CC,gBAAiB,CACbC,SAAS,WACT5M,OAAO,OACPH,MAAM,QAEVuF,OAAQ,CACJyH,OAAO,kBAaR,SAASC,GAAaC,GACzB,IAAMC,EAAUd,KADuB,EAGRe,mBAAkC,MAH1B,mBAGhCC,EAHgC,KAGpBC,EAHoB,KAIjCC,EAA4BC,iBAAsC,MAElEV,EAAkBU,iBAAuB,MACzCjI,EAASiI,iBAA0B,MAwHzC,OArHAC,qBAAU,WACN,IAAMC,EAAc,SAAC/G,GACZpB,EAAOoI,SAGPb,EAAgBa,SAIjBN,GAAcE,EAA0BI,UACxCpI,EAAOoI,QAAQ3N,MAAQ8M,EAAgBa,QAAQC,YAC/CrI,EAAOoI,QAAQxN,OAAS2M,EAAgBa,QAAQE,aAChDN,EAA0BI,QAAQG,WAhD3B,IAiDPP,EAA0BI,QAAQrG,WAM1C,OAFAyG,OAAOC,iBAAiB,SAAUN,GAE3B,WACHK,OAAOE,oBAAoB,SAAUP,OAK7CD,qBAAU,WACN,IAAMS,EAAY3I,EAAOoI,QACzB,GAAIO,EAAW,CACX,IAAMC,EAAyB,IAAI7I,GAC/B4I,EACAhB,EAAM1H,UAGV0I,EAAUF,iBAAiB,YAAaG,EAAuBzH,qBAC/DwH,EAAUF,iBAAiB,YAAaG,EAAuB5G,qBAC/D2G,EAAUF,iBAAiB,UAAWG,EAAuB1G,mBAG7D2G,SAASJ,iBAAiB,UAAWG,EAAuBxG,mBAC5DyG,SAASJ,iBAAiB,QAASG,EAAuBxF,iBAE1D4E,EAA0BI,QAAUQ,EAGxC,OAAO,WACH,GAAID,GAAaX,EAA0BI,QAAS,CAChD,IAAMQ,EAAyBZ,EAA0BI,QACzDO,EAAUD,oBAAoB,YAAaE,EAAuBzH,qBAClEwH,EAAUD,oBAAoB,YAAaE,EAAuB5G,qBAClE2G,EAAUD,oBAAoB,UAAWE,EAAuB1G,mBAEpE,GAAI8F,EAA0BI,QAAS,CACnC,IAAMQ,EAAyBZ,EAA0BI,QACzDS,SAASH,oBAAoB,UAAWE,EAAuBxG,mBAC/DyG,SAASH,oBAAoB,QAASE,EAAuBxF,qBAItE,CAACpD,IAEJkI,qBAAU,WACDP,EAAMmB,KC1GZ,SAAmBA,EAAYC,GACpC,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAC9H,GAAW,IAAD,EACvB+H,EAAM,UAAG/H,EAAMgI,cAAT,aAAG,EAAcD,OAC7B,GAAc,MAAVA,EAAJ,CAGA,IAAME,EAAM,IAAIC,MAChBD,EAAIE,IAAMJ,EAEVJ,EAAkBM,KAEpBL,EAAWQ,cAAcV,GDoGnBW,CAA0B9B,EAAMmB,MAAM,SAAC1I,GACnC2H,EAAS3H,MALT2H,EAAS,QAQd,CAACJ,EAAMmB,OAEVZ,qBAAU,WACFF,EAA0BI,UAC1BJ,EAA0BI,QAAQhI,MAAQ0H,EAC1CE,EAA0BI,QAAQG,WAhHvB,IAiHXP,EAA0BI,QAAQlJ,SAAWyI,EAAM+B,iBACnD1B,EAA0BI,QAAQxM,MAnHxB,EAoHVoM,EAA0BI,QAAQjI,WAAawH,EAAMxH,WACrD6H,EAA0BI,QAAQrG,YAEvC,CAAC+F,EAAYH,EAAMxH,WAAYwH,EAAM+B,mBAExCxB,qBAAU,WACDlI,EAAOoI,SAGPb,EAAgBa,UAIrBpI,EAAOoI,QAAQ3N,MAAQ8M,EAAgBa,QAAQC,YAC/CrI,EAAOoI,QAAQxN,OAAS2M,EAAgBa,QAAQE,aAE5CN,EAA0BI,SAC1BJ,EAA0BI,QAAQrG,YAEvC,CAAC/B,EAAQuH,IAEZW,qBAAU,WACFF,EAA0BI,UAC1BJ,EAA0BI,QAAQ/H,eAAiBsH,EAAMtH,eACzD2H,EAA0BI,QAAQrG,YAEvC,CAAC4F,EAAMtH,iBAEV6H,qBAAU,WACDP,EAAM+B,kBAIP1B,EAA0BI,UAC1BJ,EAA0BI,QAAQlJ,SAAWyI,EAAM+B,oBAExD,CAAC/B,EAAM+B,mBAGN,uBAAKC,UAAW/B,EAAQL,gBAAiBqC,IAAKrC,GAC1C,0BAAQoC,UAAW/B,EAAQ5H,OAAQ6J,UAAW,EAAGD,IAAK5J,K,8FE7J5D8G,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACF4C,UAAU,SACV3C,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE9CyC,YAAa,CACTC,OAAQhD,EAAMiD,QAAQ,GACtBC,SAAS,SAEbC,YAAa,CACTrJ,UAAWkG,EAAMiD,QAAQ,SAkB1B,SAASG,GAAgBzC,GAC5B,IAAMC,EAAUd,KAEVuD,EAAiBpC,iBAAO,MAExBqC,EAAS,uCAAG,WAAOpL,GAAP,eAAAlB,EAAA,sEACOuM,GAAiBrL,EAASxD,IADjC,OACRoD,EADQ,OAEd6I,EAAM1H,SAASuK,gBAAgB1L,GAFjB,2CAAH,sDAKT2L,EAAa,uCAAG,4BAAAzM,EAAA,sEACOuM,KADP,OACZ5L,EADY,OAElBgJ,EAAM1H,SAASyK,oBAAoB/L,GACnCgJ,EAAM1H,SAAS0K,mBAAmBhM,EAAW,IAC7C2L,EAAU3L,EAAW,IAJH,2CAAH,qDAOnBuJ,qBAAU,WACNuC,MACD,CAACJ,IA6BJ,OACI,uBAAKV,UAAW/B,EAAQV,MACpB,gBAAC0D,GAAA,EAAD,CAAajB,UAAW/B,EAAQmC,aAC5B,gBAACc,GAAA,EAAD,CAAYnP,GAAG,4BAAf,YACA,gBAACoP,GAAA,EAAD,CACItP,MApBPmM,EAAM+B,iBAGJ/B,EAAM+B,iBAAiBhO,GAFnB,EAoBCqP,SAjCS,SAAC3J,GACtB,IAAM5F,EAAQ4F,EAAMgI,OAAO5N,MAC3B,GAAI,kBAAOA,GAAsBmM,EAAMqD,aAAc,CACjD,IAAM9L,EAA4ByI,EAAMqD,aAAavH,QAAO,SAACvE,GAAyB,OAAOA,EAASxD,KAAOF,KACzG0D,IACAyI,EAAM1H,SAAS0K,mBAAmBzL,EAAS,IAC3CoL,EAAUpL,EAAS,OA4BfyK,UAAW/B,EAAQuC,aAf1BxC,EAAMqD,aAGJrD,EAAMqD,aAAa7O,KAAI,SAAC+C,EAAoB7C,GAArB,OAC1B,gBAAC4O,EAAA,EAAD,CAAUzP,MAAO0D,EAASxD,IAAKwD,EAASlC,SAHhC,+B,4CC3Dd8J,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFtM,OAAO,OACPkP,UAAU,SACV3C,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE9C4D,MAAO,CACHhB,SAAS,aAqBV,SAASiB,GAAWxD,GACvB,IAAMC,EAAUd,KAEhB,IAAKa,EAAMxH,WACP,OAAQ,kBAACiL,EAAA,EAAD,CAAKzB,UAAW/B,EAAQV,OAGpC,IAAMmE,EAAY,SAAClL,EAA2BmL,EAAmBhH,GAC7D,IAAMiH,EAAgB,YAAOpL,GAEvBqL,EAAOD,EAAiBjH,GAG9B,OAFAiH,EAAiBjH,GAAWiH,EAAiBD,GAC7CC,EAAiBD,GAAaE,EACvBD,GAGLE,EAAgB,SAACpP,GACnB,GAAKsL,EAAMxH,WAAX,CAGA,IAAMuL,EAAWrP,EAAQ,EACnB8D,EAAakL,EAAU1D,EAAMxH,WAAY9D,EAAOqP,GAEtD/D,EAAM1H,SAAS0L,mBAAmBxL,KAEhCyL,EAAc,SAACvP,GACjB,GAAKsL,EAAMxH,WAAX,CAGA,IAAMuL,EAAWrP,EAAQ,EACnB8D,EAAakL,EAAU1D,EAAMxH,WAAY9D,EAAOqP,GAEtD/D,EAAM1H,SAAS0L,mBAAmBxL,KA6FtC,OACI,kBAACiL,EAAA,EAAD,CAAKzB,UAAW/B,EAAQV,MACpB,kBAACkD,GAAD,CACIY,aAAcrD,EAAMqD,aACpBtB,iBAAkB/B,EAAM+B,iBACxBzJ,SAAU0H,EAAMkE,0BAjCnBlE,EAAMxH,YAA0C,IAA5BwH,EAAMxH,WAAWwB,OAKtC,kBAACmK,GAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,GAAA,EAAD,CAAOtC,UAAW/B,EAAQsD,MAAOgB,aAAW,gBACxC,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,WAGR,kBAACC,GAAA,EAAD,KACK5E,EAAMxH,WAAWhE,KAAI,SAACC,EAAgBC,GAAjB,OAClB,kBAAC+P,GAAA,EAAD,CAAU/J,IAAKhG,EAAOmQ,QAAS,YApClC,SAACpQ,GAClBuL,EAAM1H,SAASwM,iBAAiBrQ,GAmC2BsQ,CAAatQ,KA5CtD,SAACA,GACnB,OAAIuL,EAAMtH,iBAAmBjE,EACjB,kBAACiQ,GAAA,EAAD,KAAW,kBAAC,KAAD,OAEf,kBAACA,GAAA,EAAD,KAAW,kBAAC,KAAD,OAyCMM,CAAcvQ,GAjC7B,SAACwQ,GACX,IAAKjF,EAAMkF,UACP,OAAQ,kBAACR,GAAA,EAAD,KAAYO,GAExB,IACIE,EADElR,EAAQ+L,EAAMkF,UAAUpJ,QAAO,SAAC7H,GAAmB,OAAOA,EAAMA,QAAUgR,KAAc,GAQ9F,OALIE,EADAlR,EACYA,EAAMoB,KAEN,UAGR,kBAACqP,GAAA,EAAD,KAAYO,EAAZ,KAA0BE,GAsBTlR,CAAMQ,EAAOR,OAhFvB,SAACS,GAChB,GAAKsL,EAAMxH,WAGX,OAAc,IAAV9D,EAEI,kBAACgQ,GAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAYP,QAAS,WAAQf,EAAcpP,KACvC,kBAAC,IAAD,QAILA,IAAWsL,EAAMxH,WAAWwB,OAAS,EAExC,kBAAC0K,GAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAYP,QAAS,WAAQZ,EAAYvP,KACrC,kBAAC,IAAD,QAMR,kBAACgQ,GAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAYP,QAAS,WAAQZ,EAAYvP,KACrC,kBAAC,IAAD,OAEJ,kBAAC0Q,EAAA,EAAD,CAAYP,QAAS,WAAQf,EAAcpP,KACvC,kBAAC,IAAD,QAsDS2Q,CAAW3Q,UAlBxB,gC,8FCpHP4Q,GAIT,WAAY5M,EAA+BF,GAA4B,yBAHvEE,oBAGsE,OAFtEF,gBAEsE,EAClEjF,KAAKmF,eAAiBA,EACtBnF,KAAKiF,WAAaA,GAMpB2G,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFzM,MAAM,OACNG,OAAO,OACPuM,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1C4F,QAAQ,QAEZC,KAAM,CACFrS,IAAI,OACJF,OAAO,qBAEXwS,aAAc,CACVxS,OAAO,OACPuM,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1C4F,QAAQ,QAEZ/M,WAAY,CACRvF,OAAO,OACPuM,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1C4F,QAAQ,QAEZG,MAAO,CACHC,SAAU,GAEdC,KAAM,QAqBV,SAASC,GAAeC,GAAyE,IAAD,EAClE5F,mBAAY4F,GADsD,mBACrFjS,EADqF,KAC9EkS,EAD8E,KAGtF9D,EAAM3B,iBAAUzM,GAMtB,OAJA0M,qBAAU,WACN0B,EAAIxB,QAAU5M,IACf,CAACA,IAEG,CAACA,EAAOkS,EAAU9D,GAGtB,SAAS+D,GAAsBhG,GAClC,IAAMC,EAAUd,KAEVpH,EAAiBuI,iBAAO2F,gBAHkB,EAKV/F,mBAAkC,MALxB,mBAKzCgG,EALyC,KAK5BC,EAL4B,OAMFjG,qBANE,mBAMzCkG,EANyC,KAMxBC,EANwB,OAQpBnG,oBAAS,GARW,mBAQzCoG,EARyC,KAQhCC,EARgC,OASGrG,oBAAS,GATZ,mBASzCsG,EATyC,KASlBC,EATkB,OAWYvG,mBAA6B,MAXzC,mBAWzCwG,EAXyC,KAWjBC,EAXiB,KAY1CC,EAActG,iBAAgC,MAZJ,EAcpBJ,qBAdoB,mBAczCtI,EAdyC,KAcjCiP,EAdiC,QAgBR3G,qBAhBQ,qBAgBzCmD,GAhByC,MAgB3ByD,GAhB2B,SAiBA5G,qBAjBA,qBAiBzC6B,GAjByC,MAiBvBgF,GAjBuB,SAmBd7G,qBAnBc,qBAmBzCgF,GAnByC,MAmB9B8B,GAnB8B,SAqBoBnB,GAA2B,MArB/C,qBAqBzCoB,GArByC,MAqBpBC,GArBoB,MAqBDC,GArBC,SAsBQtB,GAAY,IAAIuB,OAtBxB,qBAsBzCC,GAtByC,MAsBxBC,GAtBwB,MAsBTC,GAtBS,SAuBW1B,GAAY,IAAIuB,OAvB3B,qBAuBzCI,GAvByC,MAuBvBC,GAvBuB,MAuBPC,GAvBO,SAyBRxH,mBAAiB,SAzBT,qBAyBzCyH,GAzByC,MAyB3BC,GAzB2B,SA2BtB1H,mBAAgB,CACtC2H,MAAM,EACNC,SAAU,MACVC,WAAY,WA9BgC,qBA2BzCC,GA3ByC,MA2BlCC,GA3BkC,MAgCxCH,GAA+BE,GAA/BF,SAAUC,GAAqBC,GAArBD,WAAYF,GAASG,GAATH,KAExBK,GAAuB,6GACRxP,GACbwO,GAAkBxO,KAFG,oCAIXC,EAAqB4E,GAC/B4K,GAAehB,GAAkB1G,QAAS8G,GAAc9G,SACxD6G,GAAc/J,KANO,sCAQT3E,EAAuB2E,GACnC4K,GAAehB,GAAkB1G,QAAS8G,GAAc9G,SACxD6G,GAAc/J,KAVO,qCAYV6K,EAAuB7K,GAClC4K,GAAehB,GAAkB1G,QAAS8G,GAAc9G,SACxD6G,GAAc/J,KAdO,qCAgBV1E,EAAwB0E,GACnC4K,GAAehB,GAAkB1G,QAAS8G,GAAc9G,SACxD6G,GAAc/J,OAlBO,EAAG,IAsB1B8K,GAAqB,+GACJ9K,GACf4K,GAAehB,GAAkB1G,QAAS8G,GAAc9G,SACxD6G,GAAc/J,KAHK,0CAKH8F,GAChB,IAAMiF,EAAe,YAAOjF,GAC5ByD,GAAgBwB,KAPG,uCASN7T,GACbyS,GAAkBzS,OAVC,EAAG,IAcxByP,GAA0B,gHACRb,GAChB,IAAMiF,EAAe,YAAOjF,GAC5ByD,GAAgBwB,KAHQ,yCAKT/Q,GACfwP,GAAoBxP,KANI,sCAQZ2N,GACZ8B,GAAa9B,OATW,EAAG,IAa7BqD,GAAc,SAACC,GACjB,OAAQA,EAAMC,SACV,IAAK,kBACDb,GAAgB,iCAChBK,GAAS,2BAAKD,IAAN,IAAaH,MAAM,KAC3B,MAEJ,QACID,GAAgB,GAAD,OAAIY,EAAMC,UACzBR,GAAS,2BAAKD,IAAN,IAAaH,MAAM,OAMjCa,GAAU,uCAAG,8BAAArS,EAAA,yDACV2J,EAAM2I,aADI,oDAKfrB,GAAc,IAAIF,OAEbpH,EAAM4I,WAPI,0EAYKhG,GAAe5C,EAAM2I,cAZ1B,cAYLE,EAZK,OAaXhC,EAAUgC,GAbC,UAeUjG,GAAsBiG,EAAG9G,IAfnC,QAeLP,EAfK,OAgBPqH,IAAMrH,EAAO5J,QACb0P,GAAc9F,EAAOjN,SAjBd,kDAoBXgU,GAAY,EAAD,IApBA,0DAAH,qDAwBhBhI,qBAAU,WACN,IAAM9F,EAAoB,SAAChB,GACvBA,EAAMkB,iBAEY,MAAdlB,EAAMiB,MAAgBjB,EAAMqP,SAAWrP,EAAMuB,UAC7C+N,MAMR,OAFA7H,SAASJ,iBAAiB,UAAWrG,GAE9B,WACHyG,SAASH,oBAAoB,UAAWtG,OAIhD8F,qBAAU,WAQN,IAAKP,EAAM2I,aAGP,OATApC,GAAS,GACTM,EAAU,IACVS,GAAc,IACdG,GAAe,SAKftB,EAAenG,EAAM2I,cAIrBrC,EACAG,GAAkB,GAItBN,EAAenG,EAAM2I,gBACtB,CAAC3I,EAAM2I,eAEVpI,qBAAU,WACDwB,KAIDuE,EACAG,GAAkB,GAItBJ,EAAmBtE,OACpB,CAACA,KAEJxB,qBAAU,WACNmI,OACD,CAAC1I,EAAM4I,aAEVrI,qBAAU,WACNxI,EAAe0I,QAAUwF,eACzB+C,KAEI9C,GACAwC,OAEL,CAACxC,EAAaE,IAEjB7F,qBAAU,WACN,IAAM0I,EAAQzB,GAAiBxN,OAAS,EACxCuM,EAAS0C,KAEV,CAACzB,KAEJ,IAAMwB,GAAmB,WACrBvB,GAAe,KAGbsB,GAAqB,WACvB,GAAgC,IAA5BvB,GAAiBxN,OAArB,CAIA,IAAMkP,EAAmB1B,GAAiBxN,OAAS,EAC7CmP,EAAgB3B,GAAiB0B,GACvC5B,GAAc6B,EAAc3Q,YAC5B0O,GAAkBiC,EAAczQ,gBAEhC,IAAM0Q,EAAc,YAAO5B,GAAiBhL,MAAM,EAAG0M,IACrDzB,GAAe2B,KAGbjB,GAAiB,SAACzP,EAAgBF,GACpC,IAAM4Q,EAAc,sBAAO1B,GAAejH,SAAtB,CAA+B,IAAI6E,GAAY5M,EAAgBF,KACnFiP,GAAe2B,IAGbC,GAAa,uCAAG,4BAAAhT,EAAA,yDACb2J,EAAM2I,aADO,oDAIbtB,GAJa,6DASTzP,EATS,iCAUMgL,GAAe5C,EAAM2I,cAV3B,OAUJE,EAVI,OAWVhC,EAAUgC,GAXA,WAaTjR,EAbS,oEAiBRgL,GAAuB7K,EAAe0I,QAAS7I,EAAQyP,GAAiBtF,IAjBhE,QAmBd6F,GAAgB,mBAChBK,GAAS,2BAAKD,IAAN,IAAaH,MAAM,KAC3BtB,GAAS,GArBK,kDAuBdgC,GAAY,EAAD,IAvBG,0DAAH,qDA2Bbe,GAAW,uCAAG,yBAAAjT,EAAA,SAAAA,EAAA,yDACX2J,EAAM2I,aADK,oDAKXtB,GALW,iDASVrP,EAAa1D,EAA4B+S,IACzCtQ,EAAU,CACZ,KAAQiJ,EAAM2I,aAAatT,KAC3B,QAAW2C,GAGXJ,IACAb,EAAO,UAAgB,CACnB,OAAUa,EAAM,OAChB,QAAWA,EAAM,QACjB,QAAWA,EAAM,UAInB2R,EAAO,IAAIC,KAAK,CAACvR,KAAKC,UAAUnB,EAAS,KAAM,OAAQ,CAAE0S,KAAM,qBAC/DjS,EAAMkS,IAAIC,gBAAgBJ,GAE1BlT,EAAI6K,SAAS0I,cAAc,KACjC1I,SAASvK,KAAKkT,YAAYxT,GAC1BA,EAAEyT,SAAW9J,EAAM2I,aAAatT,KAAO,QACvCgB,EAAE0T,KAAOvS,EACTnB,EAAE2T,QACF3T,EAAE4T,SAEFP,IAAIQ,gBAAgB1S,GAjCJ,4CAAH,qDA6QjB,OACI,gBAAC,WAAD,KACI,gBAAC2S,EAAA,EAAD,CAAQtK,SAAS,UACb,gBAACuK,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKtI,UAAW/B,EAAQyF,OA5OnD1F,EAAM2I,aAGJ3I,EAAM2I,aAAatT,KArVhB,gCAifN,uBAAK2M,UAAW/B,EAAQ2F,MA/InB4B,GAG2B,IAA5BA,GAAiBxN,OACT,6BAIR,gBAACuQ,EAAA,EAAD,CAAS7E,MAAM,kBAAkBnB,aAAW,QACxC,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAAS,WAdjDkE,OAegB,gBAAC,KAAD,QATA,6BAoBP/I,EAAM4I,WAUNtC,EAKD,gBAACiE,EAAA,EAAD,CAAS7E,MAAM,iBAAiBnB,aAAW,oBACvC,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAASwE,IACjC,gBAAC,KAAD,QANA,6BATJ,gBAACkB,EAAA,EAAD,CAAS7E,MAAM,iBAAiBnB,aAAW,kBACvC,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAPrB,WACf7E,EAAM1H,SAASmS,0BAOH,gBAAC,KAAD,QAmBS,WACzB,GAAKvE,EAAL,CAIA,IAGMwE,EAAc,WAChB/D,EAA0B,OAWxBgE,EAAe,WACjBD,IAEApB,MA6CJ,OACI,4BACI,gBAACsB,EAAA,EAAD,CACI7W,GAAG,cACH8W,SAAUnE,EACVoE,aAAW,EACXjD,KAAMkD,QAAQrE,GACdsE,QAASN,GAET,gBAACpH,EAAA,EAAD,CAAUuB,QAjED,WACjB6F,IAEK9D,EAAYnG,SAGjBmG,EAAYnG,QAAQuJ,UA2DZ,UAhBWzC,GAAc9G,SAA4C,IAAjC8G,GAAc9G,QAAQzG,OAI1D,gBAACsJ,EAAA,EAAD,CAAUuB,QAAS8F,GAAnB,UAFI,gBAACrH,EAAA,EAAD,CAAU2H,UAAQ,EAACpG,QAAS8F,GAA5B,WAiBR,gBAACJ,EAAA,EAAD,CAAS7E,MAAM,qBAAqBnB,aAAW,kBAC3C,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QA5EpB,SAACpL,GACjBkN,EAA0BlN,EAAMyR,iBA4EpB,gBAAC,KAAD,QAGR,yBACIjJ,IAAK2E,EACL6C,KAAK,OACLpU,KAAK,UACLtB,GAAG,OACHoX,OAAO,mBACP/H,SAjEa,SAAC3J,GAGtB,GAFAA,EAAMkB,iBAED0M,GAAL,CAIA,IAAM+D,EAAQ3R,EAAMgI,OAAO2J,MAC3B,GAAKA,EAAL,CAIA,IAAMjK,EAAOiK,EAAM,GAEf/J,EAAa,IAAIC,WACrBD,EAAWE,OAAS,SAAC8J,GAAO,IAAD,EACjB7J,EAAM,UAAG6J,EAAE5J,cAAL,aAAG,EAAUD,OACzB,GAAKA,EAAL,CAGA,GAAsB,kBAAXA,EAAqB,CAC5B,IACMjN,EAAUK,EADAqD,KAAKqT,MAAM9J,GACmB,SAC9C8F,GAAc/S,GAGdqS,EAAYnG,UACZmG,EAAYnG,QAAQ5M,MAAQ,MAIpCwN,EAAWkK,WAAWpK,MAmCdqK,QAAM,MAUbC,MAiFL,gBAACC,EAAA,EAAD,CACI7D,KAAMA,GACNmD,QA/OY,WACpB/C,GAAS,2BAAKD,IAAN,IAAaH,MAAM,MA+OnBY,QAASd,GACTgE,iBAAkB,IAClBC,aAAc,CAAE9D,YAAUC,eAC1BrN,IAAKoN,GAAWC,KAEpB,gBAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACxJ,QAAS,EAAGN,UAAW/B,EAAQuF,MAC3C,gBAACqG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGhK,UAAW/B,EAAQwF,cACjC,gBAAC1F,GAAD,CACIoB,KAAM+E,EACNnE,iBAAkBqE,EAClB5N,WAAY6O,GACZ3O,eAAgBuO,GAChB3O,SAAU4P,MAGlB,gBAAC2D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGhK,UAAW/B,EAAQzH,YACjC,gBAACyT,EAAA,EAAD,KACI,gBAACzI,GAAD,CACIhL,WAAY6O,GACZ3O,eAAgBuO,GAChB5D,aAAcA,GACdtB,iBAAkBqE,EAClBlB,UAAWA,GACX5M,SAAU+P,GACVnE,wBAAyBA,QAvG1B,WACnB,IAAMgI,EAAa,WACXlM,EAAM4I,WACNS,KAEAC,KAGJhC,GAAc,IACdb,GAAkB,GAClBN,EAAenG,EAAM2I,cACrBtC,EAAmBtE,KAGjBoK,EAAgB,WAClB7E,GAAc,IAEdb,GAAkB,GAClBN,EAAenG,EAAM2I,cACrBtC,EAAmBtE,KA4BvB,OACI,gBAACqK,EAAA,EAAD,CACIvE,KAAMrB,EACN6F,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,EAAA,EAAD,CAAaxY,GAAG,sBAAhB,iBACA,gBAACyY,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAmB1Y,GAAG,4BAAtB,+DAhCJiM,EAAM4I,WAEF,gBAAC8D,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAQ9H,QAASsH,EAAe3B,MAAM,WAAtC,WAGA,gBAACmC,EAAA,EAAD,CAAQ9H,QAASqH,EAAY1B,MAAM,UAAUoC,WAAS,GAAtD,WAiFXC,I,sDCloBP1N,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFgG,QAAS,OACTuH,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVxN,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE9CsN,SAAU,CACNH,SAAU,SAEVI,UAAW,iBAEfC,0BAA2B,CACvBC,OAAO,iCAEXC,kBAAmB,CACfva,MAAM,QACNG,OAAO,OACPsP,SAAS,QACTF,OAAO,MACP+K,OAAO,oBACPvN,SAAS,YAEbyN,eAAgB,CACZxa,MAAM,OACNG,OAAO,OACPsS,QAAQ,OACRgI,WAAW,SACX1N,SAAS,YAEbpH,MAAO,CACH+U,UAAU,QACV1a,MAAM,OACNG,OAAO,OACPoG,WAAW,OACXC,YAAY,QAEhBmU,iBAAkB,CACdpU,WAAW,OACXC,YAAY,QAEhBoU,QAAS,CACLnI,QAAQ,QAEZoI,aAAc,CACV7a,MAAM,OACNG,OAAO,OACP4M,SAAS,WACT0F,QAAQ,OACRwH,eAAe,WACfQ,WAAW,SAEfK,aAAc,CACV9a,MAAM,OACNG,OAAO,OACP4M,SAAS,YAEbgO,UAAW,QAeR,SAASC,GAAU9N,GACtB,IAAMC,EAAUd,KADoB,EAGAe,mBAASkH,SAHT,mBAG7B2G,EAH6B,KAGjBC,EAHiB,OAIM9N,mBAASkH,SAJf,mBAI7B6G,EAJ6B,KAIdC,EAJc,KAM9BC,EAAY7N,iBAAyB,MAsB3C,IAAM8N,EAAW,SAAC1Z,GACd,GAAKuZ,EAAL,CAIA,IAAM5M,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAC9H,GAAW,IAAD,EACrB+H,EAAM,UAAG/H,EAAMgI,cAAT,aAAG,EAAcD,OACxBA,IAGLyM,EAAcvZ,GAAS8M,EACvB0M,EAAiB,YAAID,MAEzB5M,EAAWQ,cAAckM,EAAWrZ,MAkExC,OACI,uBAAKsN,UAAW/B,EAAQV,MACpB,gBAAC8O,GAAA,EAAD,CAAUrM,UAAW/B,EAAQgN,UAEzB,gBAACxJ,EAAA,EAAD,CAAKzB,UAAW/B,EAAQoN,mBACpB,gBAAC5J,EAAA,EAAD,CAAKzB,UAAW/B,EAAQqN,eAAgBzI,QAzGjC,WACnB,IAAMyJ,EAAoBH,EAAU1N,QAC/B6N,GAGLA,EAAkBtE,UAqGF,uBAAKhI,UAAW/B,EAAQwN,iBAAkB7L,IAAK2M,SA9CvC,SAACtO,EAAS3H,GAClC,GAAK2V,EAIL,OACIA,EAAczZ,KAAI,SAACiE,EAAO/D,GACtB,IAAMyM,EAAO4M,EAAWrZ,GAsBxB,MAAqB,kBAAV+D,EApDI,SAACA,EAAewH,EAASuO,EAAqB3J,EAA+B4J,GAQpG,OACI,gBAAChL,EAAA,EAAD,CAAKzB,UAPDwM,EACQvO,EAAQkN,0BAAR,IAA0ClN,EAAQoN,kBAElDpN,EAAQoN,mBAKhB,gBAACpB,EAAA,EAAD,CAAWjK,UAAW/B,EAAQqN,gBAC1B,uBAAKtL,UAAW/B,EAAQxH,MAAOmJ,IAAKnJ,KAExC,gBAACgL,EAAA,EAAD,CAAKzB,UAAW/B,EAAQ0N,cACpB,gBAAClK,EAAA,EAAD,CAAKzB,UAAW/B,EAAQ2N,aAAc/I,QAASA,IAC/C,gBAACO,EAAA,EAAD,CAAYpD,UAAW/B,EAAQ4N,UAAWrD,MAAM,UAAU3F,QAAS4J,GAC/D,gBAAC,KAAD,SAqCGC,CACHjW,EAAOwH,EACNkB,IAASnB,EAAM2I,cAxBP,SAAClP,GACdA,EAAMkB,iBAENrC,EAASqW,eAAexN,MAEX,SAAC1H,GACdA,EAAMkB,iBAEN,IAAMjG,EAAQqZ,EAAWxR,QAAQ4E,IAClB,IAAXzM,IAIJqZ,EAAWa,OAAOla,EAAO,GACzBuZ,EAAcW,OAAOla,EAAO,GAE5BsZ,EAAc,YAAID,IAClBG,EAAiB,YAAID,IAErBjO,EAAM1H,SAASuW,kBAAkBd,OAQ9BtV,KAeNqW,CAAoB7O,EAASD,EAAM1H,UACpC,yBACI2J,IAAKkM,EACLnM,UAAW/B,EAAQyN,QACnBjE,KAAK,OACLpU,KAAK,UACLtB,GAAG,OACHoX,OAAO,UACP4D,UAAQ,EACR3L,SA/GhB,SAAoB3J,GAChBA,EAAMkB,iBAEN,IAAMyQ,EAAQ3R,EAAMgI,OAAO2J,MAC3B2C,EAAWiB,QAAX,MAAAjB,EAAU,YAAY3C,IACtB2C,EAAW/P,SAAQ,SAAC5H,EAAW1B,GAC3B0Z,EAAS1Z,MAEbsZ,EAAc,YAAID,IAClB/N,EAAM1H,SAASuW,kBAAkBd,QCzFzC,IAMM5O,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJgG,QAAS,QACTtS,OAAO,SAETgc,KAAM,CACJhc,OAAO,eAAD,OATe,GASf,OACNH,MAAM,QAERoc,aAAa,yBACX3J,QAAS,OACTgI,WAAY,SACZ4B,QAAS9P,EAAMiD,QAAQ,EAAG,GAC1ByK,eAAgB,WAChBlN,SAAS,SACNR,EAAM+P,OAAOC,SANN,IAOVlc,IAAK,OACLD,OAAO,MACPJ,MAAM,OACN0M,gBAAiBH,EAAMI,QAAQC,WAAWC,QAE5C2P,KAAM,CACJ3J,SAAU,EACV4J,UAAU,UAEZC,kBAAmB,CACjBpW,aAAa,QAAD,OA9BG,IA8BH,OACZqW,WAAYpQ,EAAMqQ,YAAYC,OAAO,CAAC,SAAU,UAAW,CACzDC,OAAQvQ,EAAMqQ,YAAYE,OAAOC,QACjCC,SAAUzQ,EAAMqQ,YAAYI,SAASC,kBAGzCC,OAAQ,GAERC,YAAa,CACXhd,OAvCe,KAyCjBid,kBAAmB,CACjBC,YAAY,QAEdC,QAAS,CACPzK,SAAU,EACVwJ,QAAS9P,EAAMiD,QAAQ,GACvBmN,WAAYpQ,EAAMqQ,YAAYC,OAAO,SAAU,CAC7CC,OAAQvQ,EAAMqQ,YAAYE,OAAOS,MACjCP,SAAUzQ,EAAMqQ,YAAYI,SAASQ,gBAEvClX,cAnDe,KAqDjBmX,aAAc,CACZd,WAAYpQ,EAAMqQ,YAAYC,OAAO,CAAC,SAAU,UAAW,CACzDC,OAAQvQ,EAAMqQ,YAAYE,OAAOC,QACjCC,SAAUzQ,EAAMqQ,YAAYI,SAASC,iBAEvC3W,aAAa,QAAD,OA1DG,IA0DH,aAoQHoX,OA9Pf,WAAgB,IAAD,EACuBtQ,oBAAS,GADhC,mBACN0I,EADM,KACM6H,EADN,OAG+BvQ,oBAAS,GAHxC,mBAGNwQ,EAHM,KAGUC,EAHV,OAImBzQ,qBAJnB,mBAIN0Q,EAJM,KAIIC,EAJJ,OAMmB3Q,qBANnB,mBAMNyI,EANM,KAMQmI,EANR,KAQPC,EAAgBC,aAAaC,QA3Ef,aAmEP,EASuC/Q,oBAAS6Q,KA3EjC,aA2EmDA,IATlE,mBASNG,EATM,KASgBC,EAThB,KAWPC,EAAc9Q,iBAAuB,MAErCL,EAAUd,KAEVkS,EAAW,WACf,GAAK1I,GAGAiI,EAAL,CAGA,IAAMU,EAAeV,EAASrU,QAAQoM,GACtC,KAAI2I,EAAe,GAAnB,CAIA,IAAM5c,EAAQ4c,EAAe,EACzB5c,GAAS,GACXoc,EAAQF,EAASlc,OAIf6c,EAAW,WACf,GAAK5I,GAGAiI,EAAL,CAGA,IAAMU,EAAeV,EAASrU,QAAQoM,GACtC,KAAI2I,EAAe,GAAnB,CAIA,IAAM5c,EAAQ4c,EAAe,EACzB5c,EAAQkc,EAAS5W,QACnB8W,EAAQF,EAASlc,OAIf4D,EAAW,8GACGsY,GAChBC,EAAYD,GAEPjI,IAKmC,IAApCiI,EAASrU,QAAQoM,IACnBmI,EAAQ,QAVG,qCAcA3P,GACb2P,EAAQ3P,OAfK,EAAG,IAmBdqQ,EAAgC,oHAElCL,GAAoB,OAFc,EAAG,IAMnCM,GAAe,WACnBd,GAAmBD,IAGfgB,GAAW,uCAAG,WAAOd,GAAP,uBAAAva,EAAA,sDACZmL,EAAgC,GADpB,cAGFoP,GAHE,gEAGPe,EAHO,iBAIO/O,GAAe+O,GAJtB,OAIVra,EAJU,OAKhBkK,EAAOmQ,EAAEtc,MAAQ,CACf,UAAaiC,EACb,IAAOsL,GAAyBtL,EAAU,OAP5B,wKAUXkK,GAVW,gEAAH,sDAaXoQ,GAAa,uCAAG,uBAAAvb,EAAA,SAAAA,EAAA,yDACfua,EADe,iEAKGc,GAAYd,GALf,OAKdiB,EALc,OAOdtI,EAAO,IAAIC,KAAK,CAACvR,KAAKC,UAAU2Z,EAAU,KAAM,OAAQ,CAAEpI,KAAM,qBAChEjS,EAAMkS,IAAIC,gBAAgBJ,GAE1BlT,EAAI6K,SAAS0I,cAAc,KACjC1I,SAASvK,KAAKkT,YAAYxT,GAC1BA,EAAEyT,SAAW,cACbzT,EAAE0T,KAAOvS,EACTnB,EAAE2T,QACF3T,EAAE4T,SAEFP,IAAIQ,gBAAgB1S,GAjBA,4CAAH,qDAyGnB,OACE,uBAAKwK,UAAU,MAAMC,IAAKmP,EAAaU,UAtFf,SAACrY,GACP,MAAdA,EAAMiB,MACRjB,EAAMkB,iBACN8W,OAmFmEvP,UAAW,GAC9E,gBAAC6P,EAAA,EAAD,MAEA,wBAAMC,IAAI,aAAajI,KAAK,gFAC5B,wBAAMiI,IAAI,aAAajI,KAAK,4DAE5B,uBAAK/H,UAAW/B,EAAQV,MACtB,gBAAC0S,EAAA,EAAD,CACEjQ,UAAW/B,EAAQ+P,OACnB1F,QAAQ,aACR4H,OAAO,SACPrK,KAAM6I,EACNzQ,QAAS,CACPN,MAAOM,EAAQgQ,cAGjB,gBAACnC,GAAD,CACEnF,aAAcA,EACdrQ,SAAUA,KAGd,wBAAM0J,UAAW/B,EAAQgP,MACvB,gBAACjJ,GAAD,CACE2C,aAAcA,EACdC,WAAYA,EACZtQ,SAAUkZ,EACVxP,UAAWmQ,YAAKlS,EAAQmQ,QAAT,eACZnQ,EAAQsQ,aAAeG,QAMhC,gBAACrM,EAAA,EAAD,CAAO+N,UAAW,EAAGpQ,UAAWmQ,YAAKlS,EAAQiQ,kBAAmBjQ,EAAQiP,aAApC,eACjCjP,EAAQuP,kBAAoBkB,KAE7B,gBAACnG,EAAA,EAAD,CAAS7E,MAxCNgL,EAAiB,gBAAkB,eAwCDnM,aAAW,iBAC9C,gBAACa,EAAA,EAAD,CAAYP,QAAS4M,GAAcjH,MAAM,UAAUjG,aAAW,eAC1DmM,EAAsC,gBAAC,IAAD,MAArB,gBAAC,IAAD,QAIvB,uBAAK1O,UAAW/B,EAAQqP,MACtB,gBAACjF,EAAA,EAAD,CAAYC,QAAQ,WAApB,mDArEDsG,GAAgC,IAApBA,EAAS5W,OAIxB,gBAACyJ,EAAA,EAAD,KACE,gBAAC8G,EAAA,EAAD,CAAS7E,MAAM,YAAYnB,aAAW,aACpC,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAASwM,GACnC,gBAAC,IAAD,QAGJ,gBAAC9G,EAAA,EAAD,CAAS7E,MAAM,YAAYnB,aAAW,aACpC,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAAS0M,GACnC,gBAAC,IAAD,QAzBH3I,EAKH,gBAAC2B,EAAA,EAAD,CAAS7E,MAAM,uBAAuBnB,aAAW,oBAC/C,gBAACa,EAAA,EAAD,CAAYoF,MAAM,UAAU3F,QAAS+M,IACnC,gBAAC,IAAD,QANI,8BAaA,gBAACnO,EAAA,EAAD,OA1CR,gBAAC2I,EAAA,EAAD,CACEvE,KAAMqJ,EACN7E,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,EAAA,EAAD,CAAaxY,GAAG,sBAAhB,0BACA,gBAACyY,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAmB1Y,GAAG,4BAAtB,yKAE4D,2BAF5D,uGAGsG,2BACpG,2BAJF,MAKK,wCALL,oCAQF,gBAAC2Y,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQ9H,QAtBS,WACrB4L,GAAc,GACdU,GAAoB,IAoBiB3G,MAAM,WAAvC,8BAGA,gBAACmC,EAAA,EAAD,CAAQ9H,QA9BM,WAClB4L,GAAc,GACdO,aAAaqB,QA9LG,YACQ,YA8LxBlB,GAAoB,IA2Bc3G,MAAM,WAApC,aClOUO,QACW,cAA7BlK,OAAOyR,SAASC,UAEe,UAA7B1R,OAAOyR,SAASC,UAEhB1R,OAAOyR,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,gBAAC,aAAD,KACE,gBAAC,GAAD,OAEFxR,SAASyR,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlc,MAAK,SAAAmc,GACJA,EAAaC,gBAEdC,OAAM,SAAAzK,GACL9Q,QAAQ8Q,MAAMA,EAAMC,a,mBEjJ5ByK,EAAOC,QAAU,IAA0B,6D","file":"static/js/main.82c6b7d4.chunk.js","sourcesContent":["export class Rectangle {\n\n    private _left = 0;\n    set left(value: number) {\n        this._left = Math.min(Math.max(0, value), 1.0);\n    }\n    get left(): number {\n        return Math.min(this._left, this._right);\n    }\n\n    private _top = 0;\n    set top(value: number) {\n        this._top = Math.min(Math.max(0, value), 1.0);\n    }\n    get top(): number {\n        return Math.min(this._top, this._bottom);\n    }\n\n    private _right = 0;\n    set right(value: number) {\n        this._right = Math.min(Math.max(0, value), 1.0);\n    }\n    get right(): number {\n        return Math.max(this._left, this._right);\n    }\n\n    private _bottom = 0;\n    set bottom(value: number) {\n        this._bottom = Math.min(Math.max(0, value), 1.0);\n    }\n    get bottom(): number {\n        return Math.max(this._top, this._bottom);\n    }\n\n    get centerX(): number {\n        return this.left + this.width() / 2;\n    }\n    get centerY(): number {\n        return this.top + this.height() / 2;\n    }\n\n    width = () => { return this.right - this.left; }\n    height = () => { return this.bottom - this.top; }\n\n    validate() {\n        const l = Math.min(this.left, this.right);\n        const t = Math.min(this.top, this.bottom);\n        const r = Math.max(this.left, this.right);\n        const b = Math.max(this.top, this.bottom);\n\n        this.left = l;\n        this.top = t;\n        this.right = r;\n        this.bottom = b;\n    }\n\n    toString() {\n        return `left: ${this.left}, top: ${this.top}, right: ${this.right}, bottom: ${this.bottom}`\n    }\n\n    toPoints(): Array<{}> {\n        return [\n            {\n                \"x\": this.left,\n                \"y\": this.top,\n            },\n            {\n                \"x\": this.right,\n                \"y\": this.top,\n            },\n            {\n                \"x\": this.right,\n                \"y\": this.bottom,\n            },\n            {\n                \"x\": this.left,\n                \"y\": this.bottom,\n            }\n        ];\n    }\n\n    deepCopy(): Rectangle {\n        const rectangle = new Rectangle();\n        rectangle.left = this.left;\n        rectangle.top = this.top;\n        rectangle.right = this.right;\n        rectangle.bottom = this.bottom;\n\n        return rectangle;\n    }\n}","import { Rectangle } from './Rectangle'\n\nexport class Region {\n\n    id: number;\n    categoryId: number\n    label: number\n    rectangle: Rectangle\n\n    constructor(id: number, categoryId: number, label: number, rectangle: Rectangle) {\n        this.id = id;\n        this.categoryId = categoryId;\n        this.label = label;\n        this.rectangle = rectangle;\n    }\n\n    containsPoint(x: number, y: number): boolean {\n        if (x < this.rectangle.left) {\n            return false;\n        }\n        if (y < this.rectangle.top) {\n            return false;\n        }\n        if (x > this.rectangle.right) {\n            return false;\n        }\n        if (y > this.rectangle.bottom) {\n            return false;\n        }\n        return true;\n    }\n\n    neighborScore(x: number, y: number): number {\n        const l = Math.abs(this.rectangle.left - x);\n        const r = Math.abs(this.rectangle.right - x);\n        const t = Math.abs(this.rectangle.top - y);\n        const b = Math.abs(this.rectangle.bottom - y);\n\n        return Math.min(l, t, r, b)\n    }\n\n    deepCopy(): Region {\n        return new Region(this.id, this.categoryId, this.label, this.rectangle.deepCopy());\n    }\n}\n\nconst ORDER_UNIT = 5;\n\nexport function convertRegionsToPathRegions(regions: Array<Region>) {\n    return regions.map((region: Region, index: number) => {\n        return {\n            \"category_id\": region.categoryId,\n            \"label\": region.label,\n            \"order\": index * ORDER_UNIT,\n            \"points\": region.rectangle.toPoints()\n        }\n    });\n}\n\nfunction horizontalPoints(points: Array<{}>): Array<number> {\n    return points.map((point: any) => {\n        return point['x'] as number\n    });\n}\n\nfunction verticalPoints(points: Array<{}>): Array<number> {\n    return points.map((point: any) => {\n        return point['y'] as number\n    });\n}\n\nexport function convertPointsToRegions(regions): Array<Region> {\n    return regions.map((regionObj: any) => {\n        const id = regionObj['id'] ? regionObj['id'] : -1;\n        const categoryId = regionObj['category_id'];\n        const label = regionObj['label'];\n\n        const horizontalPointList = horizontalPoints(regionObj['points']);\n        const verticalPointList = verticalPoints(regionObj['points']);\n\n        const left = Math.min(...horizontalPointList);\n        const top = Math.min(...verticalPointList);\n        const right = Math.max(...horizontalPointList);\n        const bottom = Math.max(...verticalPointList);\n\n        const rectangle = new Rectangle()\n        rectangle.left = left;\n        rectangle.top = top;\n        rectangle.right = right;\n        rectangle.bottom = bottom;\n        rectangle.validate()\n\n        return new Region(id, categoryId, label, rectangle);\n    });\n}","export class Category {\n\n    private _id = 0;\n    get id(): number {\n        return this._id;\n    }\n\n    private _name = \"\";\n    get name(): string {\n        return this._name;\n    }\n\n    private _order = 0;\n    get order(): number {\n        return this._order;\n    }\n\n    constructor(id: number, name: string, order: number) {\n        this._id = id;\n        this._name = name;\n        this._order = order;\n    }\n}","export class Label {\n\n    private _categoryId = 0;\n    get categoryId(): number {\n        return this._categoryId;\n    }\n\n    private _label = 0;\n    get label(): number {\n        return this._label;\n    }\n\n    private _name = \"\";\n    get name(): string {\n        return this._name;\n    }\n\n    private _order = 0;\n    get order(): number {\n        return this._order;\n    }\n\n    constructor(categoryId: number, label: number, name: string, order: number) {\n        this._categoryId = categoryId;\n        this._label = label;\n        this._name = name;\n        this._order = order;\n    }\n}","import { convertRegionsToPathRegions, convertPointsToRegions, Region } from '../entities/Region';\nimport { Category } from '../entities/Category';\nimport { Label } from '../entities/Label';\n\nconst BASE_API_ENDPOINT = 'https://mrdb.keiji.dev/api/v1'\n\nconst handleErrors = (response: any) => {\n  if (response.ok) {\n    return response;\n  }\n\n  switch (response.status) {\n    case 400: throw Error('INVALID_TOKEN');\n    case 401: throw Error('UNAUTHORIZED');\n    case 500: throw Error('INTERNAL_SERVER_ERROR');\n    case 502: throw Error('BAD_GATEWAY');\n    case 404: throw Error('No region data found.');\n    default: throw Error('UNHANDLED_ERROR');\n  }\n}\n\nexport async function fetchHash(imageFile: File) {\n  const formData = new FormData();\n  formData.append('file', imageFile);\n  const response = await fetch(BASE_API_ENDPOINT + \"/hash\", { method: 'POST', body: formData })\n    .then(handleErrors);\n  return response.json();\n}\n\nexport async function fetchCategories() {\n  const response = await fetch(BASE_API_ENDPOINT + \"/category\")\n    .then(handleErrors);\n  const jsonObj = await response.json();\n  const categories = jsonObj['categories'].map((categoryObj: any) => {\n    const id = categoryObj['id'];\n    const name = categoryObj['name'];\n    const order = categoryObj['order'];\n    return new Category(id, name, order);\n  });\n\n  return categories;\n}\n\nexport async function fetchLabels(categoryId: number) {\n  const response = await fetch(BASE_API_ENDPOINT + `/category/${categoryId}`)\n    .then(handleErrors);\n  const jsonObj = await response.json();\n  const labels = jsonObj['labels'].map((labelObj: any) => {\n    const categoryId = labelObj['category_id'];\n    const label = labelObj['label'];\n    const name = labelObj['name'];\n    const order = labelObj['order'];\n    return new Label(categoryId, label, name, order);\n  });\n\n  return labels;\n}\n\nexport function fetchPageRegionsUrl(imageIds: {}, category: Category | null | undefined) {\n  let url = BASE_API_ENDPOINT + \"/page/\" + imageIds['dhash8'];\n  if (category) {\n    url += `/?category_id=${category.id}`\n  }\n  return url;\n}\n\nexport async function fetchPageRegions(imageIds: {}, category: Category | undefined) {\n  const response = await fetch(fetchPageRegionsUrl(imageIds, category))\n    .then(handleErrors);\n  const jsonObj = await response.json();\n\n  const regions = convertPointsToRegions(jsonObj['regions']);\n  console.log(regions);\n\n  return {\n    hashes: imageIds,\n    regions: regions\n  };\n}\n\nfunction submitPageRegionsUrl(category: Category | undefined) {\n  let url = BASE_API_ENDPOINT + \"/page\";\n  if (category) {\n    url += \"?category_id=\" + category.id;\n  }\n  return url;\n}\n\nexport async function submitPageRegions(\n  idempotencyKey: string,\n  hashes: {},\n  regions: Array<Region>,\n  category: Category | undefined\n) {\n\n  const regionsObj = convertRegionsToPathRegions(regions);\n  const jsonObj = {\n    \"image_ids\": {\n      \"dhash8\": hashes[\"dhash8\"],\n      \"dhash12\": hashes[\"dhash12\"],\n      \"dhash16\": hashes[\"dhash16\"],\n    },\n    \"regions\": regionsObj\n  };\n\n  const body: string = JSON.stringify(jsonObj);\n\n  const response = await fetch(submitPageRegionsUrl(category), {\n    method: 'POST',\n    headers: {\n      \"Idempotency-Key\": idempotencyKey\n    },\n    body: body\n  });\n  return response.json();\n\n}","import { Category } from '../../entities/Category';\nimport { Rectangle } from '../../entities/Rectangle';\nimport { Region } from '../../entities/Region';\n\nconst TICK = 0.01;\nconst NEIGHBOR_THRESHOLD = 0.005;\n\nconst MARKER_LENGTH = 8;\n\ntype Mode = 'move' | 'expand' | 'shrink';\n\nexport interface Callback {\n  onSelectedRegion(region: Region | null);\n  onChangedLabel(region: Region, regionList: Array<Region>);\n\n  onAddedRegion(addedRegion: Region, regionList: Array<Region>);\n  onDeletedRegion(deletedRegion: Region, regionList: Array<Region>);\n  onDeformRegion(deformedRegion: Region, regionList: Array<Region>);\n}\n\nexport class RegionEditorController {\n\n  category: Category | null | undefined = new Category(0, 'Unknown', 0);\n  label = 0;\n\n  private mode: Mode = 'move';\n\n  regionList: Region[] | null | undefined = [];\n  image: HTMLImageElement | null = null;\n\n  private canvas: HTMLCanvasElement\n\n  private callback: Callback = new (class implements Callback {\n    onSelectedRegion(selectedRegion: Region) {\n      // Do nothing\n    }\n    onAddedRegion(addedRegion: Region, regionList: Array<Region>) {\n      // Do nothing\n    }\n    onDeletedRegion(deletedRegion: Region, regionList: Array<Region>) {\n      // Do nothing\n    }\n    onChangedLabel(deletedRegion: Region, regionList: Array<Region>) {\n      // Do nothing\n    }\n    onDeformRegion(deformedRegion: Region, regionList: Array<Region>) {\n      // Do nothing\n    }\n  })();\n\n  private _focusedRegion: Region | null = null;\n  set focusedRegion(region: Region | null) {\n    this._focusedRegion = region;\n  }\n  get focusedRegion(): Region | null {\n    return this._focusedRegion;\n  }\n\n  private _editingRegion: Region | null = null;\n  set editingRegion(region: Region | null) {\n    this._editingRegion = region;\n  }\n  get editingRegion(): Region | null {\n    return this._editingRegion;\n  }\n\n  private _selectedRegion: Region | null = null;\n  set selectedRegion(region: Region | null) {\n    this._selectedRegion = region;\n  }\n  get selectedRegion(): Region | null {\n    return this._selectedRegion;\n  }\n\n  private imageWidth = 0;\n  private imageHeight = 0;\n\n  private marginTop = 0;\n  private marginBottom = 0;\n  private marginLeft = 0;\n  private marginRight = 0;\n\n  destroy() {\n    this.image = null;\n  }\n\n  calcMargin(\n    minMarginPixel: number\n  ) {\n    if (!this.image) {\n      return;\n    }\n\n    const ratio = Math.min(\n      this.canvas.width / this.image.width,\n      this.canvas.height / this.image.height\n    );\n\n    let marginHorizontal = this.canvas.width - (this.image.width * ratio);\n    let marginVertical = this.canvas.height - (this.image.height * ratio);\n\n    if (marginHorizontal < minMarginPixel * 2) {\n      marginHorizontal = minMarginPixel * 2;\n    }\n    if (marginVertical < minMarginPixel * 2) {\n      marginVertical = minMarginPixel * 2;\n    }\n\n    this.marginTop = marginVertical / 2;\n    this.marginBottom = marginVertical - this.marginTop;\n    this.marginLeft = marginHorizontal / 2;\n    this.marginRight = marginHorizontal - this.marginLeft;\n\n    this.imageWidth = this.canvas.width - marginHorizontal;\n    this.imageHeight = this.canvas.height - marginVertical;\n  };\n\n  calcXRatio(offsetX: number) {\n    return (offsetX - this.marginLeft) / this.imageWidth;\n  }\n\n  calcYRatio(offsetY: number) {\n    return (offsetY - this.marginTop) / this.imageHeight;\n  }\n\n  private clicking = false;\n\n  onMouseDownListener = (event) => {\n    this.clicking = true;\n\n    const x = this.calcXRatio(event.offsetX);\n    const y = this.calcYRatio(event.offsetY);\n\n    const nearestRegionArray = this.nearestRegion(x, y);\n    if (!nearestRegionArray) {\n      return;\n    }\n\n    if (nearestRegionArray.length > 0) {\n      this.selectedRegion = nearestRegionArray[0];\n    } else {\n      this.selectedRegion = null;\n      this.editingRegion = this.createRegion(x, y);\n    }\n    this.callback.onSelectedRegion(this.selectedRegion);\n    this.redraw();\n  };\n\n  onMouseMoveListener = (event) => {\n\n    const x = this.calcXRatio(event.offsetX);\n    const y = this.calcYRatio(event.offsetY);\n\n    if (this.clicking && this.editingRegion !== null) {\n      this.editingRegion.rectangle.right = x;\n      this.editingRegion.rectangle.bottom = y;\n      this.redraw()\n      return;\n\n    } else if (!this.clicking) {\n      const nearestRegionArray = this.nearestRegion(x, y);\n      if (!nearestRegionArray) {\n        return;\n      }\n\n      if (nearestRegionArray.length > 0) {\n        this.focusedRegion = nearestRegionArray[0];\n      } else {\n        this.focusedRegion = null;\n      }\n      this.redraw()\n      return;\n    }\n  }\n\n  onMouseUpListener = (event) => {\n    this.clicking = false;\n\n    const region = this.editingRegion\n    if (region) {\n      region.rectangle.validate();\n      this.editingRegion = null\n\n      if (region.rectangle.width() < TICK && region.rectangle.height() < TICK) {\n        return;\n      }\n\n      this.addRegion(region);\n    }\n  }\n\n  nearestRegion(x: number, y: number) {\n    if (!this.regionList) {\n      return null;\n    }\n\n    const filteredRegion = this.regionList.filter((region) => {\n      return region.containsPoint(x, y);\n    }).filter((region) => {\n      const score = region.neighborScore(x, y);\n      return score < NEIGHBOR_THRESHOLD;\n    });\n\n    // sort by neighbor score.\n    const sortedRegions = filteredRegion.sort((a, b) => {\n      const scoreA = a.neighborScore(x, y);\n      const scoreB = b.neighborScore(x, y);\n      if (scoreA < scoreB) {\n        return -1;\n      } else if (scoreA > scoreB) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedRegions;\n  }\n\n  onKeyDownListener = (event) => {\n\n    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft' || event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      event.preventDefault();\n\n      const dist = TICK * (event.shiftKey ? 0.1 : 1.0);\n\n      if (event.altKey) {\n        this.shrink(event.key, dist);\n      } else if (event.metaKey) {\n        this.expand(event.key, dist);\n      } else {\n        this.move(event.key, dist);\n      }\n\n    } else if (event.key === 'Delete' || event.key === 'Clear' || event.key === 'Backspace' || event.key === 'd') {\n      event.preventDefault();\n\n      if (!this.selectedRegion) {\n        return;\n      }\n      this.deleteRegion(this.selectedRegion);\n\n    } else if (!isNaN(parseInt(event.key))) {\n      event.preventDefault();\n\n      if (!this.selectedRegion) {\n        return;\n      }\n      this.changeRegionLabel(this.selectedRegion, parseInt(event.key));\n\n    } else if (event.key === 'Escape') {\n      event.preventDefault();\n\n      this.editingRegion = null;\n    } else if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (event.shiftKey) {\n        this.selectPrevRegion();\n      } else {\n        this.selectNextRegion();\n      }\n    } else if (event.key === 'Meta') {\n      event.preventDefault();\n      this.mode = 'expand';\n    } else if (event.key === 'Alt') {\n      event.preventDefault();\n      this.mode = 'shrink';\n    } else {\n      console.log(event.key);\n    }\n\n    this.redraw();\n  }\n\n  onKeyUpListener = (event) => {\n    event.preventDefault();\n\n    if (event.key === 'Meta' && !event.altKey) {\n      this.mode = 'move';\n    } else if (event.key === 'Alt' && !event.metaKey) {\n      this.mode = 'move';\n    }\n\n    this.redraw();\n  }\n\n  addRegion(region: Region) {\n    const list = this.regionList ? this.regionList : [];\n\n    this.regionList = [...list, region];\n    this.callback.onAddedRegion(region, this.regionList)\n\n    this.selectedRegion = region;\n    this.callback.onSelectedRegion(region);\n  }\n\n  deleteRegion(region: Region) {\n    if (!this.regionList) {\n      return;\n    }\n\n    const deleteIndex = this.regionList.indexOf(region)\n    if (deleteIndex >= 0) {\n      this.regionList = [\n        ...this.regionList.slice(0, deleteIndex),\n        ...this.regionList.slice(deleteIndex + 1, this.regionList.length)\n      ];\n    }\n    this.callback.onDeletedRegion(region, this.regionList)\n\n    this.selectedRegion = null;\n    this.callback.onSelectedRegion(null);\n  }\n\n  moveRegion(count: number) {\n    if (!this.regionList || this.regionList.length === 0) {\n      return;\n    }\n\n    if (this.selectedRegion === null) {\n      this.selectedRegion = this.regionList[0];\n      return;\n    }\n\n    const index = this.regionList.indexOf(this.selectedRegion);\n    if (index > -1) {\n      const toIndex = index + count;\n      if (toIndex >= 0 && toIndex < this.regionList.length) {\n        this.selectedRegion = this.regionList[toIndex];\n        this.callback.onSelectedRegion(this.selectedRegion);\n      }\n    }\n  }\n\n  selectPrevRegion() {\n    this.moveRegion(-1);\n  }\n\n  selectNextRegion() {\n    this.moveRegion(+1);\n  }\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    callback: Callback,\n  ) {\n    this.canvas = canvas;\n    this.callback = callback;\n  }\n\n  createRegion(x: number, y: number) {\n    const editingRectangle = new Rectangle();\n    editingRectangle.left = x;\n    editingRectangle.right = x;\n    editingRectangle.top = y;\n    editingRectangle.bottom = y;\n    const categoryId = this.category ? this.category.id : 0;\n    return new Region(-1, categoryId, this.label, editingRectangle)\n  }\n\n  shrink(key: string, dist: number): boolean {\n    this.mode = 'shrink';\n\n    if (key.endsWith('Left')) {\n      return this.deform(0, 0, -dist, 0);\n    } else if (key.endsWith('Up')) {\n      return this.deform(0, 0, 0, -dist);\n    } else if (key.endsWith('Right')) {\n      return this.deform(dist, 0, 0, 0);\n    } else if (key.endsWith('Down')) {\n      return this.deform(0, dist, 0, 0);\n    }\n    return false;\n  }\n\n  expand(key: string, dist: number): boolean {\n    this.mode = 'expand';\n\n    if (key.endsWith('Left')) {\n      return this.deform(-dist, 0, 0, 0);\n    } else if (key.endsWith('Up')) {\n      return this.deform(0, -dist, 0, 0);\n    } else if (key.endsWith('Right')) {\n      return this.deform(0, 0, dist, 0);\n    } else if (key.endsWith('Down')) {\n      return this.deform(0, 0, 0, dist);\n    }\n\n    return false;\n  }\n\n  move(key: string, dist: number): boolean {\n    this.mode = 'move';\n\n    if (key.endsWith('Left')) {\n      return this.deform(-dist, 0, -dist, 0);\n    } else if (key.endsWith('Up')) {\n      return this.deform(0, -dist, 0, -dist);\n    } else if (key.endsWith('Right')) {\n      return this.deform(dist, 0, dist, 0);\n    } else if (key.endsWith('Down')) {\n      return this.deform(0, dist, 0, dist);\n    }\n\n    return false;\n  }\n\n  deform(left: number, top: number, right: number, bottom: number): boolean {\n    if (!this.regionList || !this.selectedRegion) {\n      return false;\n    }\n\n    const deformRegionIndex = this.regionList.indexOf(this.selectedRegion);\n    if (deformRegionIndex < 0) {\n      return false;\n    }\n\n    const deformRegion = this.selectedRegion.deepCopy();\n    const rect = deformRegion.rectangle;\n\n    let newLeft = rect.left + left;\n    let newTop = rect.top + top;\n    let newRight = rect.right + right;\n    let newBottom = rect.bottom + bottom;\n\n    newLeft = Math.max(0, newLeft);\n    newTop = Math.max(0, newTop);\n    newRight = Math.min(1.0, newRight);\n    newBottom = Math.min(1.0, newBottom);\n\n    if (rect.left === newLeft\n      && rect.top === newTop\n      && rect.right === newRight\n      && rect.bottom === newBottom) {\n      return false;\n    }\n\n    rect.left = newLeft;\n    rect.top = newTop;\n    rect.right = newRight;\n    rect.bottom = newBottom;\n\n    const newRegionList = [\n      ...this.regionList.slice(0, deformRegionIndex),\n      deformRegion,\n      ...this.regionList.slice(deformRegionIndex + 1, this.regionList.length)\n    ];\n    this.regionList = newRegionList;\n    this.selectedRegion = deformRegion;\n\n    this.callback.onDeformRegion(deformRegion, this.regionList);\n    this.callback.onSelectedRegion(this.selectedRegion);\n\n    return true;\n  }\n\n  changeRegionLabel(region: Region, label: number) {\n    this.label = label;\n\n    if (!this.regionList) {\n      return false;\n    }\n\n    const labelRegionIndex = this.regionList.indexOf(region);\n    if (labelRegionIndex < 0) {\n      return false;\n    }\n\n    const labelRegion = region.deepCopy();\n    labelRegion.label = label;\n\n    const newRegionList = [\n      ...this.regionList.slice(0, labelRegionIndex),\n      labelRegion,\n      ...this.regionList.slice(labelRegionIndex + 1, this.regionList.length)\n    ];\n    this.regionList = newRegionList;\n    this.selectedRegion = labelRegion;\n\n    this.callback.onChangedLabel(labelRegion, this.regionList);\n    this.callback.onSelectedRegion(this.selectedRegion);\n\n    return true;\n  }\n\n  redraw() {\n    const ctx = this.canvas.getContext(\"2d\");\n    if (ctx === null) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (!this.image) {\n      return;\n    }\n\n    ctx.drawImage(\n      this.image,\n      this.marginLeft, this.marginTop,\n      this.imageWidth, this.imageHeight\n    );\n\n    if (!this.regionList) {\n      return;\n    }\n\n    this.regionList.forEach((region, index) => {\n      if (region === this.selectedRegion) {\n        ctx.strokeStyle = \"#00FF00\";\n        this.drawMarkers(region, ctx);\n      } else if (region === this.focusedRegion) {\n        ctx.strokeStyle = \"#0000FF\";\n      } else {\n        ctx.strokeStyle = \"#666666\";\n      }\n\n      this.drawRegion(region, ctx);\n    })\n\n    if (this.editingRegion) {\n      ctx.strokeStyle = \"#FF0000\";\n      this.drawRegion(this.editingRegion, ctx);\n    }\n  }\n\n  drawExpandMarkers(region: Region, ctx: CanvasRenderingContext2D) {\n    // top\n    const topX = region.rectangle.centerX * this.imageWidth + this.marginLeft;\n    const topY = region.rectangle.top * this.imageHeight + this.marginTop;\n    ctx.fillRect(topX, topY, 1, -MARKER_LENGTH);\n\n    // left\n    const leftX = region.rectangle.left * this.imageWidth + this.marginLeft;\n    const leftY = region.rectangle.centerY * this.imageHeight + this.marginTop;\n    ctx.fillRect(leftX, leftY, -MARKER_LENGTH, 1);\n\n    // right\n    const rightX = region.rectangle.right * this.imageWidth + this.marginLeft;\n    const rightY = region.rectangle.centerY * this.imageHeight + this.marginTop;\n    ctx.fillRect(rightX, rightY, MARKER_LENGTH, 1);\n\n    // bottom\n    const bottomX = region.rectangle.centerX * this.imageWidth + this.marginLeft;\n    const bottomY = region.rectangle.bottom * this.imageHeight + this.marginTop;\n    ctx.fillRect(bottomX, bottomY, 1, MARKER_LENGTH);\n  }\n\n  drawShrinkMarkers(region: Region, ctx: CanvasRenderingContext2D) {\n    // top\n    const topX = region.rectangle.centerX * this.imageWidth + this.marginLeft;\n    const topY = region.rectangle.top * this.imageHeight + this.marginTop;\n    ctx.fillRect(topX, topY, 1, MARKER_LENGTH);\n\n    // left\n    const leftX = region.rectangle.left * this.imageWidth + this.marginLeft;\n    const leftY = region.rectangle.centerY * this.imageHeight + this.marginTop;\n    ctx.fillRect(leftX, leftY, MARKER_LENGTH, 1);\n\n    // right\n    const rightX = region.rectangle.right * this.imageWidth + this.marginLeft;\n    const rightY = region.rectangle.centerY * this.imageHeight + this.marginTop;\n    ctx.fillRect(rightX, rightY, -MARKER_LENGTH, 1);\n\n    // bottom\n    const bottomX = region.rectangle.centerX * this.imageWidth + this.marginLeft;\n    const bottomY = region.rectangle.bottom * this.imageHeight + this.marginTop;\n    ctx.fillRect(bottomX, bottomY, 1, -MARKER_LENGTH);\n  }\n\n  drawMarkers(region: Region, ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = \"#00FF00\";\n\n    switch (this.mode) {\n      case \"move\": {\n        return;\n      }\n      case \"expand\": {\n        this.drawExpandMarkers(region, ctx);\n        return;\n      }\n      case \"shrink\": {\n        this.drawShrinkMarkers(region, ctx);\n        return;\n      }\n    }\n  }\n\n  drawRegion(region: Region, ctx: CanvasRenderingContext2D) {\n    const rect = region.rectangle;\n\n    ctx.strokeRect(\n      rect.left * this.imageWidth + this.marginLeft,\n      rect.top * this.imageHeight + this.marginTop,\n      rect.width() * this.imageWidth,\n      rect.height() * this.imageHeight\n    );\n  }\n}\n","import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nimport { RegionEditorController, Callback as RegionEditorCallback } from './RegionEditorController';\nimport * as manipulateImage from \"../../utils/manipulateImage\";\nimport { Category } from '../../entities/Category';\nimport { Region } from '../../entities/Region';\n\nconst DEFAULT_LABEL = 0;\nconst DEFAULT_MARGIN = 16;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        height: `100%`,\n        backgroundColor: theme.palette.background.paper,\n    },\n    canvasContainer: {\n        position: `relative`,\n        height: `100%`,\n        width: `100%`,\n    },\n    canvas: {\n        cursor: `crosshair`,\n    },\n}),\n);\n\ntype Props = {\n    file: File | null | undefined,\n    selectedCategory: Category | undefined,\n    regionList: Array<Region> | undefined,\n    selectedRegion: Region | null,\n    callback: RegionEditorCallback,\n}\n\nexport function RegionEditor(props: Props) {\n    const classes = useStyles();\n\n    const [cacheImage, setImage] = useState<HTMLImageElement | null>(null);\n    const regionEditorControllerRef = useRef<RegionEditorController | null>(null);\n\n    const canvasContainer = useRef<HTMLDivElement>(null);\n    const canvas = useRef<HTMLCanvasElement>(null);\n\n    // add/remove resize listeners\n    useEffect(() => {\n        const resizeEvent = (event) => {\n            if (!canvas.current) {\n                return;\n            }\n            if (!canvasContainer.current) {\n                return;\n            }\n\n            if (cacheImage && regionEditorControllerRef.current) {\n                canvas.current.width = canvasContainer.current.clientWidth;\n                canvas.current.height = canvasContainer.current.clientHeight;\n                regionEditorControllerRef.current.calcMargin(DEFAULT_MARGIN);\n                regionEditorControllerRef.current.redraw();\n            }\n        };\n\n        window.addEventListener(\"resize\", resizeEvent);\n\n        return () => {\n            window.removeEventListener(\"resize\", resizeEvent);\n        }\n    });\n\n    // add/remove mouse and key event listeners\n    useEffect(() => {\n        const canvasRef = canvas.current;\n        if (canvasRef) {\n            const regionEditorController = new RegionEditorController(\n                canvasRef,\n                props.callback\n            );\n\n            canvasRef.addEventListener(\"mousedown\", regionEditorController.onMouseDownListener);\n            canvasRef.addEventListener(\"mousemove\", regionEditorController.onMouseMoveListener);\n            canvasRef.addEventListener(\"mouseup\", regionEditorController.onMouseUpListener);\n\n            // https://qiita.com/jay-es/items/cd30c73989659374698a\n            document.addEventListener(\"keydown\", regionEditorController.onKeyDownListener);\n            document.addEventListener(\"keyup\", regionEditorController.onKeyUpListener);\n\n            regionEditorControllerRef.current = regionEditorController;\n        }\n\n        return () => {\n            if (canvasRef && regionEditorControllerRef.current) {\n                const regionEditorController = regionEditorControllerRef.current;\n                canvasRef.removeEventListener(\"mousedown\", regionEditorController.onMouseDownListener);\n                canvasRef.removeEventListener(\"mousemove\", regionEditorController.onMouseMoveListener);\n                canvasRef.removeEventListener(\"mouseup\", regionEditorController.onMouseUpListener);\n            }\n            if (regionEditorControllerRef.current) {\n                const regionEditorController = regionEditorControllerRef.current;\n                document.removeEventListener(\"keydown\", regionEditorController.onKeyDownListener);\n                document.removeEventListener(\"keyup\", regionEditorController.onKeyUpListener);\n            }\n        };;\n\n    }, [canvas]);\n\n    useEffect(() => {\n        if (!props.file) {\n            // reset editor\n            setImage(null);\n            return;\n        }\n\n        manipulateImage.loadImage(props.file, (image: HTMLImageElement) => {\n            setImage(image);\n        });\n\n    }, [props.file]);\n\n    useEffect(() => {\n        if (regionEditorControllerRef.current) {\n            regionEditorControllerRef.current.image = cacheImage;\n            regionEditorControllerRef.current.calcMargin(DEFAULT_MARGIN);\n            regionEditorControllerRef.current.category = props.selectedCategory;\n            regionEditorControllerRef.current.label = DEFAULT_LABEL;\n            regionEditorControllerRef.current.regionList = props.regionList;\n            regionEditorControllerRef.current.redraw();\n        }\n    }, [cacheImage, props.regionList, props.selectedCategory]);\n\n    useEffect(() => {\n        if (!canvas.current) {\n            return;\n        }\n        if (!canvasContainer.current) {\n            return;\n        }\n\n        canvas.current.width = canvasContainer.current.clientWidth;\n        canvas.current.height = canvasContainer.current.clientHeight;\n\n        if (regionEditorControllerRef.current) {\n            regionEditorControllerRef.current.redraw();\n        }\n    }, [canvas, canvasContainer]);\n\n    useEffect(() => {\n        if (regionEditorControllerRef.current) {\n            regionEditorControllerRef.current.selectedRegion = props.selectedRegion;\n            regionEditorControllerRef.current.redraw();\n        }\n    }, [props.selectedRegion]);\n\n    useEffect(() => {\n        if (!props.selectedCategory) {\n            return;\n        }\n\n        if (regionEditorControllerRef.current) {\n            regionEditorControllerRef.current.category = props.selectedCategory;\n        }\n    }, [props.selectedCategory]);\n\n    return (\n        <div className={classes.canvasContainer} ref={canvasContainer}>\n            <canvas className={classes.canvas} tabIndex={-1} ref={canvas} />\n        </div>\n    );\n}\n","\nexport function loadImage(file: File, onResizeCompleted) {\n  const fileReader = new FileReader();\n  fileReader.onload = (event) => {\n    const result = event.target?.result;\n    if (result == null) {\n      return;\n    }\n    const img = new Image();\n    img.src = result as string;\n\n    onResizeCompleted(img);\n  };\n  fileReader.readAsDataURL(file)\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme } from '@material-ui/core';\n\nimport { Category } from '../entities/Category';\nimport * as apis from \"../api/crdbApi\";\nimport { Label } from '../entities/Label';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        overflowY: `scroll`,\n        backgroundColor: theme.palette.background.paper,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: `120px`,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}),\n);\n\nexport interface Callback {\n    onCategoriesUpdated(categoryList: Array<Category>): void\n    onCategorySelected(category: Category): void\n\n    onLabelsUpdated(labelList: Array<Label>): void\n}\n\ntype Props = {\n    categoryList: Array<Category> | null | undefined,\n    selectedCategory: Category | null | undefined,\n    callback: Callback,\n}\n\nexport function CategorySetting(props: Props) {\n    const classes = useStyles();\n\n    const categorySelect = useRef(null);\n\n    const getLabels = async (category: Category) => {\n        const labels = await apis.fetchLabels(category.id);\n        props.callback.onLabelsUpdated(labels);\n    };\n\n    const getCategories = async () => {\n        const categories = await apis.fetchCategories();\n        props.callback.onCategoriesUpdated(categories);\n        props.callback.onCategorySelected(categories[0]);\n        getLabels(categories[0]);\n    };\n\n    useEffect(() => {\n        getCategories();\n    }, [categorySelect]);\n\n    const categorySelected = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = event.target.value\n        if (typeof value === `number` && props.categoryList) {\n            const category: Array<Category> = props.categoryList.filter((category: Category) => { return category.id === value });\n            if (category) {\n                props.callback.onCategorySelected(category[0]);\n                getLabels(category[0]);\n            }\n        }\n    }\n\n    const selectedCategoryValue = () => {\n        if (!props.selectedCategory) {\n            return 0;\n        }\n        return props.selectedCategory.id;\n    }\n\n    const categoryList = () => {\n        if (!props.categoryList) {\n            return (<div></div>);\n        }\n        return props.categoryList.map((category: Category, index: number) => (\n            <MenuItem value={category.id}>{category.name}</MenuItem>\n        ));\n    }\n\n    return (\n        <div className={classes.root} >\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                <Select\n                    value={selectedCategoryValue()}\n                    onChange={categorySelected}\n                    className={classes.selectEmpty}\n                >\n                    {categoryList()}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport {\n    Box, createStyles, IconButton, makeStyles, Paper,\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    Theme\n} from '@material-ui/core';\n\nimport { CategorySetting, Callback as CategorySettingCallback } from './CategorySetting';\nimport { Category } from '../entities/Category';\nimport { Region } from '../entities/Region';\nimport { Label } from '../entities/Label';\n\nimport MoveOrderUpIcon from '@material-ui/icons/ExpandLess';\nimport MoveOrderDownIcon from '@material-ui/icons/ExpandMore';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        height: `100%`,\n        overflowY: `scroll`,\n        backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n        minWidth: `100%`,\n    },\n}),\n);\n\nexport interface Callback {\n    onChangeRegionList(regionList: Array<Region>): void\n    onCategoriesUpdated(categoryList: Array<Category>): void\n    onRegionSelected(region: Region): void\n}\n\ntype Props = {\n    selectedCategory: Category | undefined,\n    regionList: Array<Region> | undefined,\n    selectedRegion: Region | null,\n    categoryList: Array<Category> | undefined,\n    labelList: Array<Label> | undefined,\n    callback: Callback,\n    categorySettingCallback: CategorySettingCallback\n}\n\nexport function RegionList(props: Props) {\n    const classes = useStyles();\n\n    if (!props.regionList) {\n        return (<Box className={classes.root}></Box>);\n    }\n\n    const moveOrder = (regionList: Array<Region>, fromIndex: number, toIndex: number): Array<Region> => {\n        const resultRegionList = [...regionList];\n\n        const temp = resultRegionList[toIndex];\n        resultRegionList[toIndex] = resultRegionList[fromIndex];\n        resultRegionList[fromIndex] = temp;\n        return resultRegionList;\n    }\n\n    const moveOrderDown = (index: number) => {\n        if (!props.regionList) {\n            return;\n        }\n        const newIndex = index + 1;\n        const regionList = moveOrder(props.regionList, index, newIndex);\n\n        props.callback.onChangeRegionList(regionList);\n    }\n    const moveOrderUp = (index: number) => {\n        if (!props.regionList) {\n            return;\n        }\n        const newIndex = index - 1;\n        const regionList = moveOrder(props.regionList, index, newIndex);\n\n        props.callback.onChangeRegionList(regionList);\n    }\n\n    const orderIcons = (index: number) => {\n        if (!props.regionList) {\n            return;\n        }\n        if (index === 0) {\n            return (\n                <TableCell>\n                    <IconButton onClick={() => { moveOrderDown(index) }}>\n                        <MoveOrderDownIcon />\n                    </IconButton>\n                </TableCell>\n            );\n        } else if (index === (props.regionList.length - 1)) {\n            return (\n                <TableCell>\n                    <IconButton onClick={() => { moveOrderUp(index) }}>\n                        <MoveOrderUpIcon />\n                    </IconButton>\n                </TableCell>\n            );\n        } else {\n            return (\n                <TableCell>\n                    <IconButton onClick={() => { moveOrderUp(index) }}>\n                        <MoveOrderUpIcon />\n                    </IconButton>\n                    <IconButton onClick={() => { moveOrderDown(index) }}>\n                        <MoveOrderDownIcon />\n                    </IconButton>\n                </TableCell>\n            );\n        }\n    }\n\n    const selectedOrNot = (region: Region) => {\n        if (props.selectedRegion === region) {\n            return (<TableCell><RadioButtonCheckedIcon /></TableCell>);\n        }\n        return (<TableCell><RadioButtonUncheckedIcon /></TableCell>);\n\n    }\n\n    const selectRegion = (region: Region) => {\n        props.callback.onRegionSelected(region);\n    }\n\n    const label = (labelValue: number) => {\n        if (!props.labelList) {\n            return (<TableCell>{labelValue}</TableCell>);\n        }\n        const label = props.labelList.filter((label: Label) => { return label.label === labelValue })[0];\n        let labelName: string\n        if (label) {\n            labelName = label.name;\n        } else {\n            labelName = 'Unknown';\n        }\n\n        return (<TableCell>{labelValue}: {labelName}</TableCell>);\n    }\n\n    const showTable = () => {\n        if (!props.regionList || props.regionList.length === 0) {\n            return (<span></span>);\n        }\n\n        return (\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            <TableCell>Label</TableCell>\n                            <TableCell align=\"center\">Order</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.regionList.map((region: Region, index: number) => (\n                            <TableRow key={index} onClick={() => { selectRegion(region) }}>\n                                {selectedOrNot(region)}\n                                {label(region.label)}\n                                {orderIcons(index)}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    }\n\n    return (\n        <Box className={classes.root}>\n            <CategorySetting\n                categoryList={props.categoryList}\n                selectedCategory={props.selectedCategory}\n                callback={props.categorySettingCallback} />\n\n            {showTable()}\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport { Dispatch, MutableRefObject, SetStateAction, useEffect, useRef, useState } from 'react';\n\nimport {\n    AppBar, Button, Container, createStyles,\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n    Grid, IconButton, makeStyles, Menu, MenuItem, Snackbar, SnackbarOrigin,\n    Theme, Toolbar, Tooltip, Typography\n} from '@material-ui/core';\n\nimport { Callback as RegionEditorCallback } from './RegionEditor/RegionEditorController';\nimport { Callback as RegionListCallback } from './RegionList';\nimport { Callback as CategorySettingCallback } from './CategorySetting';\n\nimport * as apis from \"../api/crdbApi\";\nimport { convertPointsToRegions, convertRegionsToPathRegions, Region } from '../entities/Region';\nimport { Label } from '../entities/Label';\nimport { Category } from '../entities/Category';\nimport { RegionEditor } from './RegionEditor/index';\nimport { RegionList } from './RegionList';\n\nimport UndoIcon from '@material-ui/icons/Undo';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class EditHistory {\n    selectedRegion: Region | null\n    regionList: Array<Region>\n\n    constructor(selectedRegion: Region | null, regionList: Array<Region>) {\n        this.selectedRegion = selectedRegion;\n        this.regionList = regionList;\n    }\n}\n\nconst APP_TITLE = \"MRDB - Manga Region Database\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        width: `100%`,\n        height: `100%`,\n        backgroundColor: theme.palette.background.paper,\n        display: `flex`,\n    },\n    grid: {\n        top: `64px`,\n        height: `calc(100% - 64px)`,\n    },\n    regionEditor: {\n        height: `100%`,\n        backgroundColor: theme.palette.background.paper,\n        display: `flex`\n    },\n    regionList: {\n        height: `100%`,\n        backgroundColor: theme.palette.background.paper,\n        display: `flex`\n    },\n    title: {\n        flexGrow: 1,\n    },\n    menu: {\n    },\n}),\n);\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nexport interface Callback {\n    onTurnOnlineRequested(): void\n}\n\ntype Props = {\n    onlineMode: boolean,\n    selectedFile: File | null | undefined,\n    callback: Callback,\n    className: any\n}\n\n// https://stackoverflow.com/a/58439475\nfunction useStateRef<T>(initialValue: T): [T, Dispatch<SetStateAction<T>>, MutableRefObject<T>] {\n    const [value, setValue] = useState<T>(initialValue);\n\n    const ref = useRef<T>(value);\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n\n    return [value, setValue, ref];\n}\n\nexport function RegionEditorContainer(props: Props) {\n    const classes = useStyles();\n\n    const idempotencyKey = useRef(uuidv4());\n\n    const [editingFile, setEditingFile] = useState<File | null | undefined>(null);\n    const [editingCategory, setEditingCategory] = useState<Category>()\n\n    const [isDirty, setDirty] = useState(false);\n    const [showSaveConfirmDialog, setShowSaveDialog] = useState(false);\n\n    const [anchorImportExportMenu, setAnchorImportExportMenu] = useState<null | HTMLElement>(null);\n    const importInput = useRef<null | HTMLInputElement>(null);\n\n    const [hashes, setHashes] = useState<{}>()\n\n    const [categoryList, setCategoryList] = useState<Array<Category>>()\n    const [selectedCategory, setSelectedCategory] = useState<Category>()\n\n    const [labelList, setLabelList] = useState<Array<Label>>()\n\n    const [selectedRegionState, setSelectedRegion, selectedRegionRef] = useStateRef<Region | null>(null);\n    const [regionListState, setRegionList, regionListRef] = useStateRef(new Array<Region>());\n    const [historyListState, setHistoryList, historyListRef] = useStateRef(new Array<EditHistory>());\n\n    const [snackbarText, setSnackbarText] = useState<string>(\"Hello\")\n\n    const [state, setState] = useState<State>({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n    });\n    const { vertical, horizontal, open } = state;\n\n    const regionEditorCallback = new (class implements RegionEditorCallback {\n        onSelectedRegion(selectedRegion: Region | null) {\n            setSelectedRegion(selectedRegion)\n        }\n        onAddedRegion(addedRegion: Region, newRegionList: Region[]) {\n            addEditHistory(selectedRegionRef.current, regionListRef.current);\n            setRegionList(newRegionList);\n        }\n        onDeletedRegion(deletedRegion: Region, newRegionList: Region[]) {\n            addEditHistory(selectedRegionRef.current, regionListRef.current);\n            setRegionList(newRegionList);\n        }\n        onChangedLabel(changedRegion: Region, newRegionList: Region[]) {\n            addEditHistory(selectedRegionRef.current, regionListRef.current);\n            setRegionList(newRegionList);\n        }\n        onDeformRegion(deformedRegion: Region, newRegionList: Region[]) {\n            addEditHistory(selectedRegionRef.current, regionListRef.current);\n            setRegionList(newRegionList);\n        }\n    })();\n\n    const regionListCallback = new (class implements RegionListCallback {\n        onChangeRegionList(newRegionList: Region[]): void {\n            addEditHistory(selectedRegionRef.current, regionListRef.current);\n            setRegionList(newRegionList);\n        }\n        onCategoriesUpdated(categoryList: Category[]): void {\n            const newCategoryList = [...categoryList];\n            setCategoryList(newCategoryList);\n        }\n        onRegionSelected(region: Region): void {\n            setSelectedRegion(region);\n        }\n    })();\n\n    const categorySettingCallback = new (class implements CategorySettingCallback {\n        onCategoriesUpdated(categoryList: Category[]): void {\n            const newCategoryList = [...categoryList];\n            setCategoryList(newCategoryList);\n        }\n        onCategorySelected(category: Category): void {\n            setSelectedCategory(category);\n        }\n        onLabelsUpdated(labelList: Label[]): void {\n            setLabelList(labelList);\n        }\n    })();\n\n    const handleError = (error: Error) => {\n        switch (error.message) {\n            case \"Failed to fetch\": {\n                setSnackbarText(\"A network error has occurred.\");\n                setState({ ...state, open: true });\n                break;\n            }\n            default: {\n                setSnackbarText(`${error.message}`);\n                setState({ ...state, open: true });\n                break;\n            }\n        }\n    }\n\n    const getRegions = async () => {\n        if (!props.selectedFile) {\n            return;\n        }\n\n        setRegionList(new Array<Region>());\n\n        if (!props.onlineMode) {\n            return;\n        }\n\n        try {\n            const h = await apis.fetchHash(props.selectedFile);\n            setHashes(h);\n\n            const result = await apis.fetchPageRegions(h, selectedCategory);\n            if (h === result.hashes) {\n                setRegionList(result.regions);\n            }\n        } catch (error) {\n            handleError(error);\n        }\n    }\n\n    useEffect(() => {\n        const onKeyDownListener = (event) => {\n            event.preventDefault();\n\n            if (event.key === 'z' && (event.ctrlKey || event.metaKey)) {\n                restoreEditHistory();\n            }\n        }\n\n        document.addEventListener(\"keydown\", onKeyDownListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", onKeyDownListener);\n        };\n    });\n\n    useEffect(() => {\n        const init = () => {\n            setDirty(false);\n            setHashes({});\n            setRegionList([]);\n            setHistoryList([]);\n        }\n\n        if (!props.selectedFile) {\n            init();\n            setEditingFile(props.selectedFile);\n            return;\n        }\n\n        if (isDirty) {\n            setShowSaveDialog(true);\n            return;\n        }\n\n        setEditingFile(props.selectedFile);\n    }, [props.selectedFile]);\n\n    useEffect(() => {\n        if (!selectedCategory) {\n            return;\n        }\n\n        if (isDirty) {\n            setShowSaveDialog(true);\n            return;\n        }\n\n        setEditingCategory(selectedCategory);\n    }, [selectedCategory]);\n\n    useEffect(() => {\n        getRegions();\n    }, [props.onlineMode]);\n\n    useEffect(() => {\n        idempotencyKey.current = uuidv4();\n        clearEditHistory();\n\n        if (editingFile) {\n            getRegions();\n        }\n    }, [editingFile, editingCategory]);\n\n    useEffect(() => {\n        const dirty = historyListState.length > 0;\n        setDirty(dirty);\n\n    }, [historyListState]);\n\n    const clearEditHistory = () => {\n        setHistoryList([]);\n    }\n\n    const restoreEditHistory = () => {\n        if (historyListState.length === 0) {\n            return;\n        }\n\n        const lastHistoryIndex = historyListState.length - 1;\n        const latestHistory = historyListState[lastHistoryIndex];\n        setRegionList(latestHistory.regionList);\n        setSelectedRegion(latestHistory.selectedRegion);\n\n        const newHistoryList = [...historyListState.slice(0, lastHistoryIndex)];\n        setHistoryList(newHistoryList);\n    }\n\n    const addEditHistory = (selectedRegion, regionList) => {\n        const newHistoryList = [...historyListRef.current, new EditHistory(selectedRegion, regionList)];\n        setHistoryList(newHistoryList);\n    }\n\n    const submitRegions = async () => {\n        if (!props.selectedFile) {\n            return;\n        }\n        if (!regionListState) {\n            return;\n        }\n\n        try {\n            if (!hashes) {\n                const h = await apis.fetchHash(props.selectedFile);\n                setHashes(h);\n            }\n            if (!hashes) {\n                return;\n            }\n\n            await apis.submitPageRegions(idempotencyKey.current, hashes, regionListState, selectedCategory);\n\n            setSnackbarText(\"Save completed.\");\n            setState({ ...state, open: true });\n            setDirty(false);\n        } catch (error) {\n            handleError(error);\n        }\n    };\n\n    const saveRegions = async () => {\n        if (!props.selectedFile) {\n            return;\n        }\n\n        if (!regionListState) {\n            return;\n        }\n\n        const regionsObj = convertRegionsToPathRegions(regionListState);\n        const jsonObj = {\n            \"file\": props.selectedFile.name,\n            \"regions\": regionsObj\n        }\n\n        if (hashes) {\n            jsonObj[\"image_ids\"] = {\n                \"dhash8\": hashes[\"dhash8\"],\n                \"dhash12\": hashes[\"dhash12\"],\n                \"dhash16\": hashes[\"dhash16\"],\n            }\n        }\n\n        const blob = new Blob([JSON.stringify(jsonObj, null, '  ')], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n\n        const a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.download = props.selectedFile.name + '.json';\n        a.href = url;\n        a.click();\n        a.remove();\n\n        URL.revokeObjectURL(url);\n    };\n\n    const title = () => {\n        if (!props.selectedFile) {\n            return APP_TITLE;\n        }\n        return props.selectedFile.name\n    }\n\n    const onSnackbarClose = () => {\n        setState({ ...state, open: false });\n    }\n\n    const undo = () => {\n        restoreEditHistory();\n    }\n\n    const menu = () => {\n        const showUndoMenu = () => {\n            if (!historyListState) {\n                return (<span></span>);\n            }\n            if (historyListState.length === 0) {\n                return (<span></span>);\n            }\n\n            return (\n                <Tooltip title=\"Undo (Ctrl + Z)\" aria-label=\"undo\">\n                    <IconButton color=\"inherit\" onClick={() => { undo(); }}>\n                        <UndoIcon />\n                    </IconButton>\n                </Tooltip>\n            );\n        };\n\n        const showServerMenu = () => {\n            const turnOnline = () => {\n                props.callback.onTurnOnlineRequested();\n            }\n\n            if (!props.onlineMode) {\n                return (\n                    <Tooltip title=\"Turn to online\" aria-label=\"turn-online-on\">\n                        <IconButton color=\"inherit\" onClick={turnOnline}>\n                            <CloudOffIcon />\n                        </IconButton>\n                    </Tooltip>\n                );\n            }\n\n            if (!isDirty) {\n                return (<span></span>);\n            }\n\n            return (\n                <Tooltip title=\"Save to server\" aria-label=\"submit-to-server\">\n                    <IconButton color=\"inherit\" onClick={submitRegions}>\n                        <BackupIcon />\n                    </IconButton>\n                </Tooltip>\n            );\n        };\n\n        const showImportExportMenu = () => {\n            if (!editingFile) {\n                return;\n            }\n\n            const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n                setAnchorImportExportMenu(event.currentTarget);\n            }\n            const handleClose = () => {\n                setAnchorImportExportMenu(null);\n            }\n\n            const handleImport = () => {\n                handleClose();\n\n                if (!importInput.current) {\n                    return;\n                }\n                importInput.current.click();\n            }\n            const handleExport = () => {\n                handleClose();\n\n                saveRegions();\n            }\n\n            const handleChangeFile = (event) => {\n                event.preventDefault();\n\n                if (!regionListState) {\n                    return;\n                }\n\n                const files = event.target.files;\n                if (!files) {\n                    return;\n                }\n\n                const file = files[0];\n\n                var fileReader = new FileReader();\n                fileReader.onload = (e) => {\n                    const result = e.target?.result;\n                    if (!result) {\n                        return;\n                    }\n                    if (typeof result === 'string') {\n                        const jsonObj = JSON.parse(result as string);\n                        const regions = convertPointsToRegions(jsonObj['regions']);\n                        setRegionList(regions);\n                    }\n\n                    if (importInput.current) {\n                        importInput.current.value = \"\";\n                    }\n                };\n\n                fileReader.readAsText(file);\n            }\n\n            const showExportMenu = () => {\n                const disabled = (!regionListRef.current || regionListRef.current.length === 0);\n                if (disabled) {\n                    return (<MenuItem disabled onClick={handleExport}>Export</MenuItem>);\n                }\n                return (<MenuItem onClick={handleExport}>Export</MenuItem>);\n            }\n\n            return (\n                <span>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorImportExportMenu}\n                        keepMounted\n                        open={Boolean(anchorImportExportMenu)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleImport}>Import</MenuItem>\n                        {showExportMenu()}\n                    </Menu >\n                    <Tooltip title=\"Export region data\" aria-label=\"export-regions\">\n                        <IconButton color=\"inherit\" onClick={handleClick}>\n                            <ImportExportIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <input\n                        ref={importInput}\n                        type=\"file\"\n                        name=\"files[]\"\n                        id=\"file\"\n                        accept=\"application/json\"\n                        onChange={handleChangeFile}\n                        hidden\n                    />\n                </span >\n            );\n        }\n\n        return (\n            <div className={classes.menu}>\n                {showUndoMenu()}\n                {showServerMenu()}\n                {showImportExportMenu()}\n            </div>\n        );\n    }\n\n    const showSaveDialog = () => {\n        const handleSave = () => {\n            if (props.onlineMode) {\n                submitRegions();\n            } else {\n                saveRegions();\n            }\n\n            setRegionList([]);\n            setShowSaveDialog(false);\n            setEditingFile(props.selectedFile);\n            setEditingCategory(selectedCategory);\n        }\n\n        const handleDiscard = () => {\n            setRegionList([]);\n\n            setShowSaveDialog(false);\n            setEditingFile(props.selectedFile);\n            setEditingCategory(selectedCategory);\n        }\n\n        const showSaveButton = () => {\n            if (props.onlineMode) {\n                return (\n                    <DialogActions>\n                        <Button onClick={handleDiscard} color=\"primary\">\n                            Discard\n                        </Button>\n                        <Button onClick={handleSave} color=\"primary\" autoFocus>\n                            Save\n                        </Button>\n                    </DialogActions>\n                );\n            } else {\n                return (\n                    <DialogActions>\n                        <Button onClick={handleDiscard} color=\"primary\">\n                            Discard\n                        </Button>\n                        <Button onClick={handleSave} color=\"primary\" autoFocus>\n                            Save\n                        </Button>\n                    </DialogActions>\n                );\n            }\n        }\n        return (\n            <Dialog\n                open={showSaveConfirmDialog}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Save changes?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Do you want to save changes before opening an other file?\n              </DialogContentText>\n                </DialogContent>\n\n                {showSaveButton()}\n            </Dialog>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title()}\n                    </Typography>\n                    {menu()}\n                </Toolbar>\n            </AppBar>\n\n            <Snackbar\n                open={open}\n                onClose={onSnackbarClose}\n                message={snackbarText}\n                autoHideDuration={2000}\n                anchorOrigin={{ vertical, horizontal }}\n                key={vertical + horizontal}\n            />\n            <Grid container spacing={0} className={classes.grid}>\n                <Grid item xs={8} className={classes.regionEditor}>\n                    <RegionEditor\n                        file={editingFile}\n                        selectedCategory={editingCategory}\n                        regionList={regionListState}\n                        selectedRegion={selectedRegionState}\n                        callback={regionEditorCallback}\n                    />\n                </Grid>\n                <Grid item xs={4} className={classes.regionList} >\n                    <Container>\n                        <RegionList\n                            regionList={regionListState}\n                            selectedRegion={selectedRegionState}\n                            categoryList={categoryList}\n                            selectedCategory={editingCategory}\n                            labelList={labelList}\n                            callback={regionListCallback}\n                            categorySettingCallback={categorySettingCallback}\n                        />\n                    </Container>\n                </Grid>\n\n            </Grid>\n\n            {showSaveDialog()}\n\n        </React.Fragment>\n    );\n}\n","import * as React from 'react';\nimport { useState, useRef } from 'react';\n\nimport { Box, Container, GridList, IconButton } from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport add_photo_alternate_black from '../add_photo_alternate-black-48dp.svg';\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    imageBoxContainerSelected: {\n        border: `1px solid #0000ff !important;`,\n    },\n    imageBoxContainer: {\n        width: `200px`,\n        height: `100%`,\n        minWidth: `150px`,\n        margin: `8px`,\n        border: `1px solid #cccccc`,\n        position: `relative`,\n    },\n    imageContainer: {\n        width: `100%`,\n        height: `100%`,\n        display: `flex`,\n        alignItems: `center`,\n        position: `absolute`,\n    },\n    image: {\n        objectFit: `cover`,\n        width: `100%`,\n        height: `auto`,\n        marginLeft: `auto`,\n        marginRight: `auto`,\n    },\n    imagePlaceholder: {\n        marginLeft: `auto`,\n        marginRight: `auto`,\n    },\n    boxFile: {\n        display: `none`,\n    },\n    tapContainer: {\n        width: `100%`,\n        height: `100%`,\n        position: `absolute`,\n        display: `flex`,\n        justifyContent: `flex-end`,\n        alignItems: `start`,\n    },\n    selectionBox: {\n        width: `100%`,\n        height: `100%`,\n        position: `absolute`,\n    },\n    clearIcon: {\n    },\n}),\n);\n\nexport interface Callback {\n    onFileSelected(file: File): void\n    onFileListUpdated(fileList: Array<File>): void\n}\n\ntype Props = {\n    selectedFile: File | null | undefined,\n    callback: Callback,\n}\n\nexport function ImageList(props: Props) {\n    const classes = useStyles();\n\n    const [imageFiles, setImageFiles] = useState(Array<File>());\n    const [previewImages, setPreviewImages] = useState(Array<string | ArrayBuffer>());\n\n    const fileInput = useRef<HTMLInputElement>(null)\n\n    const showFileDialog = () => {\n        const fileInputSnapshot = fileInput.current;\n        if (!fileInputSnapshot) {\n            return;\n        }\n        fileInputSnapshot.click();\n    }\n\n    function changeFile(event: any) {\n        event.preventDefault();\n\n        const files = event.target.files;\n        imageFiles.unshift(...files);\n        imageFiles.forEach((imageFile, index) => {\n            readFile(index);\n        });\n        setImageFiles([...imageFiles]);\n        props.callback.onFileListUpdated(imageFiles)\n    }\n\n    const readFile = (index: number) => {\n        if (!previewImages) {\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = (event) => {\n            const result = event.target?.result;\n            if (!result) {\n                return;\n            }\n            previewImages[index] = result;\n            setPreviewImages([...previewImages])\n        };\n        fileReader.readAsDataURL(imageFiles[index]);\n    };\n\n    const createPreviewImage = (image: string, classes, isSelected: boolean, onClick: (event: any) => void, onDelete: (event: any) => void) => {\n        const imageBoxClassName = () => {\n            if (isSelected) {\n                return (classes.imageBoxContainerSelected + ` ` + classes.imageBoxContainer);\n            } else {\n                return (classes.imageBoxContainer);\n            }\n        }\n        return (\n            <Box className={imageBoxClassName()}>\n                <Container className={classes.imageContainer}>\n                    <img className={classes.image} src={image} />\n                </Container>\n                <Box className={classes.tapContainer} >\n                    <Box className={classes.selectionBox} onClick={onClick} />\n                    <IconButton className={classes.clearIcon} color=\"inherit\" onClick={onDelete}>\n                        <ClearIcon />\n                    </IconButton>\n                </Box>\n            </Box>\n        )\n    }\n\n    const createPreviewImages = (classes, callback: Callback) => {\n        if (!previewImages) {\n            return;\n        }\n\n        return (\n            previewImages.map((image, index: number) => {\n                const file = imageFiles[index];\n                const onSelect = (event: any) => {\n                    event.preventDefault();\n\n                    callback.onFileSelected(file);\n                };\n                const onDelete = (event: any) => {\n                    event.preventDefault();\n\n                    const index = imageFiles.indexOf(file);\n                    if (index === -1) {\n                        return;\n                    }\n\n                    imageFiles.splice(index, 1);\n                    previewImages.splice(index, 1);\n\n                    setImageFiles([...imageFiles]);\n                    setPreviewImages([...previewImages])\n\n                    props.callback.onFileListUpdated(imageFiles)\n                };\n                if (typeof image === 'string') {\n                    return createPreviewImage(\n                        image, classes,\n                        (file === props.selectedFile),\n                        onSelect, onDelete);\n                }\n                return image;\n            })\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList}>\n\n                <Box className={classes.imageBoxContainer}>\n                    <Box className={classes.imageContainer} onClick={showFileDialog}>\n                        <img className={classes.imagePlaceholder} src={add_photo_alternate_black} />\n                    </Box>\n                </Box>\n\n                {createPreviewImages(classes, props.callback)}\n                <input\n                    ref={fileInput}\n                    className={classes.boxFile}\n                    type=\"file\"\n                    name=\"files[]\"\n                    id=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={changeFile}\n                />\n            </GridList>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport { useRef, useState } from 'react';\n\nimport clsx from 'clsx';\nimport { Drawer, IconButton, CssBaseline, Paper, Box, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions, Button, Typography, Tooltip } from '@material-ui/core';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport OpenDrawerIcon from '@material-ui/icons/ExpandLess';\nimport CloseDrawerIcon from '@material-ui/icons/ExpandMore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n\nimport { RegionEditorContainer, Callback as RegionEditorContainerCallback } from './components/RegionEditorContainer';\nimport { ImageList, Callback } from './components/ImageList';\n\nimport * as apis from \"./api/crdbApi\";\n\n// https://techracho.bpsinc.jp/hachi8833/2019_10_09/80851\nconst KEY_AGREEMENT = 'agreement';\nconst LATEST_AGREEMENT_DATE = '20201006';\n\nconst drawerHeight = 210;\nconst drawerHeaderHeight = 64;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'block',\n      height: `100vh`,\n    },\n    main: {\n      height: `calc(100% - ${drawerHeaderHeight}px)`,\n      width: `100%`,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(1, 1),\n      justifyContent: 'flex-end',\n      position: `fixed`,\n      ...theme.mixins.toolbar,\n      top: 'auto',\n      bottom: `0px`,\n      width: `100%`,\n      backgroundColor: theme.palette.background.paper,\n    },\n    grow: {\n      flexGrow: 1,\n      textAlign: `center`,\n    },\n    drawerHeaderShift: {\n      marginBottom: `calc(${drawerHeight}px)`,\n      transition: theme.transitions.create(['margin', 'height'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n    },\n    drawerPaper: {\n      height: drawerHeight,\n    },\n    drawerHeaderPaper: {\n      paddingLeft: `16dp`,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginBottom: -drawerHeight,\n    },\n    contentShift: {\n      transition: theme.transitions.create(['margin', 'height'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginBottom: `calc(${drawerHeight}px)`,\n    },\n  }),\n);\n\n\nfunction App() {\n  const [onlineMode, setOnlineMode] = useState(true);\n\n  const [imageListShown, setImageListShown] = useState(true);\n  const [fileList, setFileList] = useState<Array<File>>();\n\n  const [selectedFile, setFile] = useState<File | null>();\n\n  const agreementDate = localStorage.getItem(KEY_AGREEMENT);\n  const [agreementDialogShown, showAgreementDialog] = useState(agreementDate ? !(agreementDate === LATEST_AGREEMENT_DATE) : true);\n\n  const rootElement = useRef<HTMLDivElement>(null);\n\n  const classes = useStyles();\n\n  const prevFile = () => {\n    if (!selectedFile) {\n      return\n    }\n    if (!fileList) {\n      return\n    }\n    const currentIndex = fileList.indexOf(selectedFile)\n    if (currentIndex < 0) {\n      return;\n    }\n\n    const index = currentIndex - 1;\n    if (index >= 0) {\n      setFile(fileList[index]);\n    }\n  }\n\n  const nextFile = () => {\n    if (!selectedFile) {\n      return\n    }\n    if (!fileList) {\n      return\n    }\n    const currentIndex = fileList.indexOf(selectedFile)\n    if (currentIndex < 0) {\n      return;\n    }\n\n    const index = currentIndex + 1;\n    if (index < fileList.length) {\n      setFile(fileList[index]);\n    }\n  }\n\n  const callback = new (class implements Callback {\n    onFileListUpdated(fileList: File[]): void {\n      setFileList(fileList);\n\n      if (!selectedFile) {\n        return;\n      }\n\n      // The selected file is removed from list.\n      if (fileList.indexOf(selectedFile) === -1) {\n        setFile(null);\n      }\n    }\n\n    onFileSelected(file: File) {\n      setFile(file);\n    }\n  })();\n\n  const regionEditorContainerCallback = new (class implements RegionEditorContainerCallback {\n    onTurnOnlineRequested(): void {\n      showAgreementDialog(true);\n    }\n  })();\n\n  const toggleDrawer = () => {\n    setImageListShown(!imageListShown);\n  }\n\n  const getHashList = async (fileList: Array<File>) => {\n    const result: { [key: string]: {} } = {};\n\n    for (const f of fileList) {\n      const imageIds = await apis.fetchHash(f);\n      result[f.name] = {\n        \"image_ids\": imageIds,\n        \"url\": apis.fetchPageRegionsUrl(imageIds, null)\n      };\n    }\n    return result;\n  }\n\n  const exportRegions = async () => {\n    if (!fileList) {\n      return;\n    }\n\n    const hashList = await getHashList(fileList)\n\n    const blob = new Blob([JSON.stringify(hashList, null, '  ')], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.download = 'export.json';\n    a.href = url;\n    a.click();\n    a.remove();\n\n    URL.revokeObjectURL(url);\n  }\n\n  const onKeyDownListener = (event) => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      toggleDrawer();\n    }\n  }\n\n  const agreementDialog = () => {\n    const handleAgree = () => {\n      setOnlineMode(true);\n      localStorage.setItem(KEY_AGREEMENT, LATEST_AGREEMENT_DATE);\n      showAgreementDialog(false);\n    }\n    const handleDisagree = () => {\n      setOnlineMode(false);\n      showAgreementDialog(false);\n    }\n\n    return (\n      <Dialog\n        open={agreementDialogShown}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Online mode(Agreement)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            In online mode, image files will be uploaded to our server for generate image-ids by \"imagehash\" algorithm.\n            And image files will be stored for improving our services.<br />\n            ROI(Region of Interest) data and image-ids will be uploaded, stored, and redistribute for all users.<br />\n            <br />\n            We <strong>DO NOT</strong> redistribute your image files.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDisagree} color=\"primary\">\n            Decline (Continue offline)\n          </Button>\n          <Button onClick={handleAgree} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  const showExportButton = () => {\n    if (!onlineMode) {\n      return (<span></span>);\n    }\n\n    return (\n      <Tooltip title=\"Export all image-IDs\" aria-label=\"export-image-ids\">\n        <IconButton color=\"inherit\" onClick={exportRegions}>\n          <SaveAltIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n  const showButtons = () => {\n    if (!fileList || fileList.length === 0) {\n      return (<Box></Box>);\n    }\n    return (\n      <Box>\n        <Tooltip title=\"Prev file\" aria-label=\"prev-file\">\n          <IconButton color=\"inherit\" onClick={prevFile}>\n            <NavigateBeforeIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Next file\" aria-label=\"next-file\">\n          <IconButton color=\"inherit\" onClick={nextFile}>\n            <NavigateNextIcon />\n          </IconButton>\n        </Tooltip>\n\n        {showExportButton()}\n      </Box>\n    );\n  }\n\n  const toggleDrawerTitle = () => {\n    return imageListShown ? \"Close (Space)\" : \"Open (Space)\";\n  }\n\n  return (\n    <div className=\"App\" ref={rootElement} onKeyDown={onKeyDownListener} tabIndex={-1}>\n      <CssBaseline />\n\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n      <div className={classes.root}>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"bottom\"\n          open={imageListShown}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <ImageList\n            selectedFile={selectedFile}\n            callback={callback} />\n        </Drawer>\n\n        <main className={classes.main}>\n          <RegionEditorContainer\n            selectedFile={selectedFile}\n            onlineMode={onlineMode}\n            callback={regionEditorContainerCallback}\n            className={clsx(classes.content, {\n              [classes.contentShift]: imageListShown,\n            })}\n          />\n        </main>\n      </div>\n\n      <Paper elevation={1} className={clsx(classes.drawerHeaderPaper, classes.drawerHeader, {\n        [classes.drawerHeaderShift]: imageListShown,\n      })}>\n        <Tooltip title={toggleDrawerTitle()} aria-label=\"toggle-drawer\">\n          <IconButton onClick={toggleDrawer} color=\"inherit\" aria-label=\"open drawer\">\n            {!imageListShown ? <OpenDrawerIcon /> : <CloseDrawerIcon />}\n          </IconButton>\n        </Tooltip>\n\n        <div className={classes.grow}>\n          <Typography variant='caption'>Copyright 2020 Keiji ARIYAMA (C-LIS CO., LTD.)</Typography>\n        </div>\n\n        {showButtons()}\n      </Paper>\n\n      {agreementDialog()}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/add_photo_alternate-black-48dp.51e18df8.svg\";"],"sourceRoot":""}